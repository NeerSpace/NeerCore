### YamlMime:ManagedReference
items:
- uid: NeerCore.Api.Error
  commentId: T:NeerCore.Api.Error
  id: Error
  parent: NeerCore.Api
  children:
  - NeerCore.Api.Error.#ctor(System.Int32,System.String,System.String,System.Nullable{IReadOnlyList{NeerCore.Api.Error.Details}})
  - NeerCore.Api.Error.Errors
  - NeerCore.Api.Error.Message
  - NeerCore.Api.Error.Status
  - NeerCore.Api.Error.Type
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: Error
  fullName: NeerCore.Api.Error
  type: Class
  source:
    remote:
      path: src/NeerCore.Api/Error.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: Error
    path: ../src/NeerCore.Api/Error.cs
    startLine: 5
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api
  summary: "\nRecord that represents a default NeerCore HTTP error response.\n"
  example: []
  syntax:
    content: 'public sealed class Error : object'
    content.vb: >-
      Public NotInheritable Class Error
          Inherits Object
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{NeerCore.Api.Error}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: NeerCore.Api.Error.Status
  commentId: P:NeerCore.Api.Error.Status
  id: Status
  parent: NeerCore.Api.Error
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: Error.Status
  fullName: NeerCore.Api.Error.Status
  type: Property
  source:
    remote:
      path: src/NeerCore.Api/Error.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: Status
    path: ../src/NeerCore.Api/Error.cs
    startLine: 8
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api
  example:
  - "400"
  syntax:
    content: public int Status { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Status As Integer
  overload: NeerCore.Api.Error.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.Api.Error.Type
  commentId: P:NeerCore.Api.Error.Type
  id: Type
  parent: NeerCore.Api.Error
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Error.Type
  fullName: NeerCore.Api.Error.Type
  type: Property
  source:
    remote:
      path: src/NeerCore.Api/Error.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: Type
    path: ../src/NeerCore.Api/Error.cs
    startLine: 11
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api
  example:
  - ValidationFailed
  syntax:
    content: public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Type As String
  overload: NeerCore.Api.Error.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.Api.Error.Message
  commentId: P:NeerCore.Api.Error.Message
  id: Message
  parent: NeerCore.Api.Error
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: Error.Message
  fullName: NeerCore.Api.Error.Message
  type: Property
  source:
    remote:
      path: src/NeerCore.Api/Error.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: Message
    path: ../src/NeerCore.Api/Error.cs
    startLine: 14
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api
  example:
  - Something goes wrong :(
  syntax:
    content: public string Message { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Message As String
  overload: NeerCore.Api.Error.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.Api.Error.Errors
  commentId: P:NeerCore.Api.Error.Errors
  id: Errors
  parent: NeerCore.Api.Error
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: Error.Errors
  fullName: NeerCore.Api.Error.Errors
  type: Property
  source:
    remote:
      path: src/NeerCore.Api/Error.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: Errors
    path: ../src/NeerCore.Api/Error.cs
    startLine: 16
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api
  syntax:
    content: public IReadOnlyList<Error.Details>? Errors { get; set; }
    parameters: []
    return:
      type: System.Nullable{IReadOnlyList{NeerCore.Api.Error.Details}}
    content.vb: Public Property Errors As IReadOnlyList(Of  Error.Details)?
  overload: NeerCore.Api.Error.Errors*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.Api.Error.#ctor(System.Int32,System.String,System.String,System.Nullable{IReadOnlyList{NeerCore.Api.Error.Details}})
  commentId: M:NeerCore.Api.Error.#ctor(System.Int32,System.String,System.String,System.Nullable{IReadOnlyList{NeerCore.Api.Error.Details}})
  id: '#ctor(System.Int32,System.String,System.String,System.Nullable{IReadOnlyList{NeerCore.Api.Error.Details}})'
  parent: NeerCore.Api.Error
  langs:
  - csharp
  - vb
  name: Error(Int32, String, String, Nullable<IReadOnlyList<Error.Details>>)
  nameWithType: Error.Error(Int32, String, String, Nullable<IReadOnlyList<Error.Details>>)
  fullName: NeerCore.Api.Error.Error(System.Int32, System.String, System.String, System.Nullable<IReadOnlyList<NeerCore.Api.Error.Details>>)
  type: Constructor
  source:
    remote:
      path: src/NeerCore.Api/Error.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: .ctor
    path: ../src/NeerCore.Api/Error.cs
    startLine: 19
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api
  syntax:
    content: public Error(int status, string type, string message, IReadOnlyList<Error.Details>? errors = null)
    parameters:
    - id: status
      type: System.Int32
    - id: type
      type: System.String
    - id: message
      type: System.String
    - id: errors
      type: System.Nullable{IReadOnlyList{NeerCore.Api.Error.Details}}
    content.vb: Public Sub New(status As Integer, type As String, message As String, errors As IReadOnlyList(Of  Error.Details)? = Nothing)
  overload: NeerCore.Api.Error.#ctor*
  nameWithType.vb: Error.Error(Int32, String, String, Nullable(Of IReadOnlyList(Of Error.Details)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NeerCore.Api.Error.Error(System.Int32, System.String, System.String, System.Nullable(Of IReadOnlyList(Of NeerCore.Api.Error.Details)))
  name.vb: Error(Int32, String, String, Nullable(Of IReadOnlyList(Of Error.Details)))
references:
- uid: NeerCore.Api
  commentId: N:NeerCore.Api
  name: NeerCore.Api
  nameWithType: NeerCore.Api
  fullName: NeerCore.Api
- uid: System.IEquatable{NeerCore.Api.Error}
  commentId: '!:System.IEquatable{NeerCore.Api.Error}'
  definition: System.IEquatable`1
  name: IEquatable<Error>
  nameWithType: IEquatable<Error>
  fullName: System.IEquatable<NeerCore.Api.Error>
  nameWithType.vb: IEquatable(Of Error)
  fullName.vb: System.IEquatable(Of NeerCore.Api.Error)
  name.vb: IEquatable(Of Error)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NeerCore.Api.Error
    name: Error
    nameWithType: Error
    fullName: NeerCore.Api.Error
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NeerCore.Api.Error
    name: Error
    nameWithType: Error
    fullName: NeerCore.Api.Error
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  isExternal: true
  name: IEquatable<>
  nameWithType: IEquatable<>
  fullName: System.IEquatable<>
  nameWithType.vb: IEquatable(Of )
  fullName.vb: System.IEquatable(Of )
  name.vb: IEquatable(Of )
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.Api.Error.Status*
  commentId: Overload:NeerCore.Api.Error.Status
  name: Status
  nameWithType: Error.Status
  fullName: NeerCore.Api.Error.Status
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NeerCore.Api.Error.Type*
  commentId: Overload:NeerCore.Api.Error.Type
  name: Type
  nameWithType: Error.Type
  fullName: NeerCore.Api.Error.Type
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NeerCore.Api.Error.Message*
  commentId: Overload:NeerCore.Api.Error.Message
  name: Message
  nameWithType: Error.Message
  fullName: NeerCore.Api.Error.Message
- uid: NeerCore.Api.Error.Errors*
  commentId: Overload:NeerCore.Api.Error.Errors
  name: Errors
  nameWithType: Error.Errors
  fullName: NeerCore.Api.Error.Errors
- uid: System.Nullable{IReadOnlyList{NeerCore.Api.Error.Details}}
  commentId: '!:System.Nullable{IReadOnlyList{NeerCore.Api.Error.Details}}'
  definition: System.Nullable`1
  name: Nullable<IReadOnlyList<Error.Details>>
  nameWithType: Nullable<IReadOnlyList<Error.Details>>
  fullName: System.Nullable<IReadOnlyList<NeerCore.Api.Error.Details>>
  nameWithType.vb: Nullable(Of IReadOnlyList(Of Error.Details))
  fullName.vb: System.Nullable(Of IReadOnlyList(Of NeerCore.Api.Error.Details))
  name.vb: Nullable(Of IReadOnlyList(Of Error.Details))
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NeerCore.Api.Error.Details
    name: Error.Details
    nameWithType: Error.Details
    fullName: NeerCore.Api.Error.Details
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NeerCore.Api.Error.Details
    name: Error.Details
    nameWithType: Error.Details
    fullName: NeerCore.Api.Error.Details
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.Api.Error.#ctor*
  commentId: Overload:NeerCore.Api.Error.#ctor
  name: Error
  nameWithType: Error.Error
  fullName: NeerCore.Api.Error.Error
