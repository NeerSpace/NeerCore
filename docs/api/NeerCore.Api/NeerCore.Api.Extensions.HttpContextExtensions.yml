### YamlMime:ManagedReference
items:
- uid: NeerCore.Api.Extensions.HttpContextExtensions
  commentId: T:NeerCore.Api.Extensions.HttpContextExtensions
  id: HttpContextExtensions
  parent: NeerCore.Api.Extensions
  children:
  - NeerCore.Api.Extensions.HttpContextExtensions.GetIPAddress(HttpContext)
  - NeerCore.Api.Extensions.HttpContextExtensions.GetUserAgent(HttpContext)
  - NeerCore.Api.Extensions.HttpContextExtensions.Write500ErrorAsync(HttpResponse,Exception,System.Boolean)
  - NeerCore.Api.Extensions.HttpContextExtensions.WriteExtended500ErrorAsync(HttpResponse,Exception)
  - NeerCore.Api.Extensions.HttpContextExtensions.WriteJsonAsync``1(HttpResponse,HttpStatusCode,``0)
  langs:
  - csharp
  - vb
  name: HttpContextExtensions
  nameWithType: HttpContextExtensions
  fullName: NeerCore.Api.Extensions.HttpContextExtensions
  type: Class
  source:
    remote:
      path: src/NeerCore.Api/Extensions/HttpContextExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: HttpContextExtensions
    path: ../src/NeerCore.Api/Extensions/HttpContextExtensions.cs
    startLine: 9
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api.Extensions
  syntax:
    content: 'public static class HttpContextExtensions : object'
    content.vb: >-
      Public Module HttpContextExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NeerCore.Api.Extensions.HttpContextExtensions.GetIPAddress(HttpContext)
  commentId: M:NeerCore.Api.Extensions.HttpContextExtensions.GetIPAddress(HttpContext)
  id: GetIPAddress(HttpContext)
  isExtensionMethod: true
  parent: NeerCore.Api.Extensions.HttpContextExtensions
  langs:
  - csharp
  - vb
  name: GetIPAddress(HttpContext)
  nameWithType: HttpContextExtensions.GetIPAddress(HttpContext)
  fullName: NeerCore.Api.Extensions.HttpContextExtensions.GetIPAddress(HttpContext)
  type: Method
  source:
    remote:
      path: src/NeerCore.Api/Extensions/HttpContextExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: GetIPAddress
    path: ../src/NeerCore.Api/Extensions/HttpContextExtensions.cs
    startLine: 14
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api.Extensions
  summary: "\nGets IP address from request headers.\n"
  example: []
  syntax:
    content: public static IPAddress GetIPAddress(this HttpContext httpContext)
    parameters:
    - id: httpContext
      type: HttpContext
    return:
      type: IPAddress
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetIPAddress(httpContext As HttpContext) As IPAddress
  overload: NeerCore.Api.Extensions.HttpContextExtensions.GetIPAddress*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NeerCore.Api.Extensions.HttpContextExtensions.GetUserAgent(HttpContext)
  commentId: M:NeerCore.Api.Extensions.HttpContextExtensions.GetUserAgent(HttpContext)
  id: GetUserAgent(HttpContext)
  isExtensionMethod: true
  parent: NeerCore.Api.Extensions.HttpContextExtensions
  langs:
  - csharp
  - vb
  name: GetUserAgent(HttpContext)
  nameWithType: HttpContextExtensions.GetUserAgent(HttpContext)
  fullName: NeerCore.Api.Extensions.HttpContextExtensions.GetUserAgent(HttpContext)
  type: Method
  source:
    remote:
      path: src/NeerCore.Api/Extensions/HttpContextExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: GetUserAgent
    path: ../src/NeerCore.Api/Extensions/HttpContextExtensions.cs
    startLine: 36
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api.Extensions
  summary: "\nGets user agent from request headers.\n"
  example: []
  syntax:
    content: public static string GetUserAgent(this HttpContext httpContext)
    parameters:
    - id: httpContext
      type: HttpContext
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetUserAgent(httpContext As HttpContext) As String
  overload: NeerCore.Api.Extensions.HttpContextExtensions.GetUserAgent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NeerCore.Api.Extensions.HttpContextExtensions.WriteJsonAsync``1(HttpResponse,HttpStatusCode,``0)
  commentId: M:NeerCore.Api.Extensions.HttpContextExtensions.WriteJsonAsync``1(HttpResponse,HttpStatusCode,``0)
  id: WriteJsonAsync``1(HttpResponse,HttpStatusCode,``0)
  isExtensionMethod: true
  parent: NeerCore.Api.Extensions.HttpContextExtensions
  langs:
  - csharp
  - vb
  name: WriteJsonAsync<TResponse>(HttpResponse, HttpStatusCode, TResponse)
  nameWithType: HttpContextExtensions.WriteJsonAsync<TResponse>(HttpResponse, HttpStatusCode, TResponse)
  fullName: NeerCore.Api.Extensions.HttpContextExtensions.WriteJsonAsync<TResponse>(HttpResponse, HttpStatusCode, TResponse)
  type: Method
  source:
    remote:
      path: src/NeerCore.Api/Extensions/HttpContextExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: WriteJsonAsync
    path: ../src/NeerCore.Api/Extensions/HttpContextExtensions.cs
    startLine: 48
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api.Extensions
  summary: "\nSends a JSON response with provided JSON body and HTTP status code. UTF-8 encoding will be used.\n"
  example: []
  syntax:
    content: public static async Task WriteJsonAsync<TResponse>(this HttpResponse context, HttpStatusCode statusCode, TResponse response)
    parameters:
    - id: context
      type: HttpResponse
      description: Represents the outgoing side of an individual HTTP request.
    - id: statusCode
      type: HttpStatusCode
      description: Contains the values of status codes defined for HTTP.
    - id: response
      type: '{TResponse}'
      description: Response object to be converted and sent as JSON.
    typeParameters:
    - id: TResponse
      description: Generic response type.
    return:
      type: Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WriteJsonAsync(Of TResponse)(context As HttpResponse, statusCode As HttpStatusCode, response As TResponse) As Task
  overload: NeerCore.Api.Extensions.HttpContextExtensions.WriteJsonAsync*
  nameWithType.vb: HttpContextExtensions.WriteJsonAsync(Of TResponse)(HttpResponse, HttpStatusCode, TResponse)
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NeerCore.Api.Extensions.HttpContextExtensions.WriteJsonAsync(Of TResponse)(HttpResponse, HttpStatusCode, TResponse)
  name.vb: WriteJsonAsync(Of TResponse)(HttpResponse, HttpStatusCode, TResponse)
- uid: NeerCore.Api.Extensions.HttpContextExtensions.Write500ErrorAsync(HttpResponse,Exception,System.Boolean)
  commentId: M:NeerCore.Api.Extensions.HttpContextExtensions.Write500ErrorAsync(HttpResponse,Exception,System.Boolean)
  id: Write500ErrorAsync(HttpResponse,Exception,System.Boolean)
  isExtensionMethod: true
  parent: NeerCore.Api.Extensions.HttpContextExtensions
  langs:
  - csharp
  - vb
  name: Write500ErrorAsync(HttpResponse, Exception, Boolean)
  nameWithType: HttpContextExtensions.Write500ErrorAsync(HttpResponse, Exception, Boolean)
  fullName: NeerCore.Api.Extensions.HttpContextExtensions.Write500ErrorAsync(HttpResponse, Exception, System.Boolean)
  type: Method
  source:
    remote:
      path: src/NeerCore.Api/Extensions/HttpContextExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: Write500ErrorAsync
    path: ../src/NeerCore.Api/Extensions/HttpContextExtensions.cs
    startLine: 61
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api.Extensions
  summary: "\n\n"
  example: []
  syntax:
    content: public static async Task Write500ErrorAsync(this HttpResponse context, Exception exception, bool extended = false)
    parameters:
    - id: context
      type: HttpResponse
      description: ''
    - id: exception
      type: Exception
      description: ''
    - id: extended
      type: System.Boolean
      description: ''
    return:
      type: Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Write500ErrorAsync(context As HttpResponse, exception As Exception, extended As Boolean = False) As Task
  overload: NeerCore.Api.Extensions.HttpContextExtensions.Write500ErrorAsync*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: NeerCore.Api.Extensions.HttpContextExtensions.WriteExtended500ErrorAsync(HttpResponse,Exception)
  commentId: M:NeerCore.Api.Extensions.HttpContextExtensions.WriteExtended500ErrorAsync(HttpResponse,Exception)
  id: WriteExtended500ErrorAsync(HttpResponse,Exception)
  isExtensionMethod: true
  parent: NeerCore.Api.Extensions.HttpContextExtensions
  langs:
  - csharp
  - vb
  name: WriteExtended500ErrorAsync(HttpResponse, Exception)
  nameWithType: HttpContextExtensions.WriteExtended500ErrorAsync(HttpResponse, Exception)
  fullName: NeerCore.Api.Extensions.HttpContextExtensions.WriteExtended500ErrorAsync(HttpResponse, Exception)
  type: Method
  source:
    remote:
      path: src/NeerCore.Api/Extensions/HttpContextExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: WriteExtended500ErrorAsync
    path: ../src/NeerCore.Api/Extensions/HttpContextExtensions.cs
    startLine: 74
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api.Extensions
  summary: "\n\n"
  example: []
  syntax:
    content: public static async Task WriteExtended500ErrorAsync(this HttpResponse context, Exception exception)
    parameters:
    - id: context
      type: HttpResponse
      description: ''
    - id: exception
      type: Exception
      description: ''
    return:
      type: Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WriteExtended500ErrorAsync(context As HttpResponse, exception As Exception) As Task
  overload: NeerCore.Api.Extensions.HttpContextExtensions.WriteExtended500ErrorAsync*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
references:
- uid: NeerCore.Api.Extensions
  commentId: N:NeerCore.Api.Extensions
  name: NeerCore.Api.Extensions
  nameWithType: NeerCore.Api.Extensions
  fullName: NeerCore.Api.Extensions
- uid: NeerCore.Api.Extensions.HttpContextExtensions.GetIPAddress*
  commentId: Overload:NeerCore.Api.Extensions.HttpContextExtensions.GetIPAddress
  name: GetIPAddress
  nameWithType: HttpContextExtensions.GetIPAddress
  fullName: NeerCore.Api.Extensions.HttpContextExtensions.GetIPAddress
- uid: HttpContext
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: HttpContext
- uid: IPAddress
  commentId: '!:IPAddress'
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: IPAddress
- uid: NeerCore.Api.Extensions.HttpContextExtensions.GetUserAgent*
  commentId: Overload:NeerCore.Api.Extensions.HttpContextExtensions.GetUserAgent
  name: GetUserAgent
  nameWithType: HttpContextExtensions.GetUserAgent
  fullName: NeerCore.Api.Extensions.HttpContextExtensions.GetUserAgent
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NeerCore.Api.Extensions.HttpContextExtensions.WriteJsonAsync*
  commentId: Overload:NeerCore.Api.Extensions.HttpContextExtensions.WriteJsonAsync
  name: WriteJsonAsync
  nameWithType: HttpContextExtensions.WriteJsonAsync
  fullName: NeerCore.Api.Extensions.HttpContextExtensions.WriteJsonAsync
- uid: HttpResponse
  isExternal: true
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: HttpResponse
- uid: HttpStatusCode
  commentId: '!:HttpStatusCode'
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: HttpStatusCode
- uid: '{TResponse}'
  commentId: '!:TResponse'
  definition: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: TResponse
  commentId: '!:TResponse'
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: NeerCore.Api.Extensions.HttpContextExtensions.Write500ErrorAsync*
  commentId: Overload:NeerCore.Api.Extensions.HttpContextExtensions.Write500ErrorAsync
  name: Write500ErrorAsync
  nameWithType: HttpContextExtensions.Write500ErrorAsync
  fullName: NeerCore.Api.Extensions.HttpContextExtensions.Write500ErrorAsync
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NeerCore.Api.Extensions.HttpContextExtensions.WriteExtended500ErrorAsync*
  commentId: Overload:NeerCore.Api.Extensions.HttpContextExtensions.WriteExtended500ErrorAsync
  name: WriteExtended500ErrorAsync
  nameWithType: HttpContextExtensions.WriteExtended500ErrorAsync
  fullName: NeerCore.Api.Extensions.HttpContextExtensions.WriteExtended500ErrorAsync
