### YamlMime:ManagedReference
items:
- uid: NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter
  commentId: T:NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter
  id: AuthorizeCheckOperationFilter
  parent: NeerCore.Api.Swagger.Filters
  children:
  - NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.#ctor(IOptions{NeerCore.Api.Swagger.SwaggerConfigurationOptions})
  - NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.Apply(OpenApiOperation,OperationFilterContext)
  langs:
  - csharp
  - vb
  name: AuthorizeCheckOperationFilter
  nameWithType: AuthorizeCheckOperationFilter
  fullName: NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter
  type: Class
  source:
    remote:
      path: src/NeerCore.Api/Swagger/Filters/AuthorizeCheckOperationFilter.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: AuthorizeCheckOperationFilter
    path: ../src/NeerCore.Api/Swagger/Filters/AuthorizeCheckOperationFilter.cs
    startLine: 9
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api.Swagger.Filters
  syntax:
    content: 'public sealed class AuthorizeCheckOperationFilter : IOperationFilter'
    content.vb: >-
      Public NotInheritable Class AuthorizeCheckOperationFilter
          Inherits IOperationFilter
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.#ctor(IOptions{NeerCore.Api.Swagger.SwaggerConfigurationOptions})
  commentId: M:NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.#ctor(IOptions{NeerCore.Api.Swagger.SwaggerConfigurationOptions})
  id: '#ctor(IOptions{NeerCore.Api.Swagger.SwaggerConfigurationOptions})'
  parent: NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter
  langs:
  - csharp
  - vb
  name: AuthorizeCheckOperationFilter(IOptions<SwaggerConfigurationOptions>)
  nameWithType: AuthorizeCheckOperationFilter.AuthorizeCheckOperationFilter(IOptions<SwaggerConfigurationOptions>)
  fullName: NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.AuthorizeCheckOperationFilter(IOptions<NeerCore.Api.Swagger.SwaggerConfigurationOptions>)
  type: Constructor
  source:
    remote:
      path: src/NeerCore.Api/Swagger/Filters/AuthorizeCheckOperationFilter.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: .ctor
    path: ../src/NeerCore.Api/Swagger/Filters/AuthorizeCheckOperationFilter.cs
    startLine: 13
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api.Swagger.Filters
  syntax:
    content: public AuthorizeCheckOperationFilter(IOptions<SwaggerConfigurationOptions> optionsAccessor)
    parameters:
    - id: optionsAccessor
      type: IOptions{NeerCore.Api.Swagger.SwaggerConfigurationOptions}
    content.vb: Public Sub New(optionsAccessor As IOptions(Of SwaggerConfigurationOptions))
  overload: NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.#ctor*
  nameWithType.vb: AuthorizeCheckOperationFilter.AuthorizeCheckOperationFilter(IOptions(Of SwaggerConfigurationOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.AuthorizeCheckOperationFilter(IOptions(Of NeerCore.Api.Swagger.SwaggerConfigurationOptions))
  name.vb: AuthorizeCheckOperationFilter(IOptions(Of SwaggerConfigurationOptions))
- uid: NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.Apply(OpenApiOperation,OperationFilterContext)
  commentId: M:NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.Apply(OpenApiOperation,OperationFilterContext)
  id: Apply(OpenApiOperation,OperationFilterContext)
  parent: NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter
  langs:
  - csharp
  - vb
  name: Apply(OpenApiOperation, OperationFilterContext)
  nameWithType: AuthorizeCheckOperationFilter.Apply(OpenApiOperation, OperationFilterContext)
  fullName: NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.Apply(OpenApiOperation, OperationFilterContext)
  type: Method
  source:
    remote:
      path: src/NeerCore.Api/Swagger/Filters/AuthorizeCheckOperationFilter.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: Apply
    path: ../src/NeerCore.Api/Swagger/Filters/AuthorizeCheckOperationFilter.cs
    startLine: 18
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api.Swagger.Filters
  syntax:
    content: public void Apply(OpenApiOperation operation, OperationFilterContext context)
    parameters:
    - id: operation
      type: OpenApiOperation
    - id: context
      type: OperationFilterContext
    content.vb: Public Sub Apply(operation As OpenApiOperation, context As OperationFilterContext)
  overload: NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.Apply*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NeerCore.Api.Swagger.Filters
  commentId: N:NeerCore.Api.Swagger.Filters
  name: NeerCore.Api.Swagger.Filters
  nameWithType: NeerCore.Api.Swagger.Filters
  fullName: NeerCore.Api.Swagger.Filters
- uid: NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.#ctor*
  commentId: Overload:NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.#ctor
  name: AuthorizeCheckOperationFilter
  nameWithType: AuthorizeCheckOperationFilter.AuthorizeCheckOperationFilter
  fullName: NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.AuthorizeCheckOperationFilter
- uid: IOptions{NeerCore.Api.Swagger.SwaggerConfigurationOptions}
  commentId: '!:IOptions{NeerCore.Api.Swagger.SwaggerConfigurationOptions}'
  definition: IOptions`1
  name: IOptions<SwaggerConfigurationOptions>
  nameWithType: IOptions<SwaggerConfigurationOptions>
  fullName: IOptions<NeerCore.Api.Swagger.SwaggerConfigurationOptions>
  nameWithType.vb: IOptions(Of SwaggerConfigurationOptions)
  fullName.vb: IOptions(Of NeerCore.Api.Swagger.SwaggerConfigurationOptions)
  name.vb: IOptions(Of SwaggerConfigurationOptions)
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NeerCore.Api.Swagger.SwaggerConfigurationOptions
    name: SwaggerConfigurationOptions
    nameWithType: SwaggerConfigurationOptions
    fullName: NeerCore.Api.Swagger.SwaggerConfigurationOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NeerCore.Api.Swagger.SwaggerConfigurationOptions
    name: SwaggerConfigurationOptions
    nameWithType: SwaggerConfigurationOptions
    fullName: NeerCore.Api.Swagger.SwaggerConfigurationOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptions`1
  isExternal: true
  name: IOptions<>
  nameWithType: IOptions<>
  fullName: IOptions<>
  nameWithType.vb: IOptions(Of )
  fullName.vb: IOptions(Of )
  name.vb: IOptions(Of )
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.Apply*
  commentId: Overload:NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.Apply
  name: Apply
  nameWithType: AuthorizeCheckOperationFilter.Apply
  fullName: NeerCore.Api.Swagger.Filters.AuthorizeCheckOperationFilter.Apply
- uid: OpenApiOperation
  commentId: '!:OpenApiOperation'
  isExternal: true
  name: OpenApiOperation
  nameWithType: OpenApiOperation
  fullName: OpenApiOperation
- uid: OperationFilterContext
  commentId: '!:OperationFilterContext'
  isExternal: true
  name: OperationFilterContext
  nameWithType: OperationFilterContext
  fullName: OperationFilterContext
