### YamlMime:ManagedReference
items:
- uid: NeerCore.Api.KebabCaseNamingConvention
  commentId: T:NeerCore.Api.KebabCaseNamingConvention
  id: KebabCaseNamingConvention
  parent: NeerCore.Api
  children:
  - NeerCore.Api.KebabCaseNamingConvention.TransformOutbound(System.Nullable{System.Object})
  - NeerCore.Api.KebabCaseNamingConvention.Use(MvcOptions)
  langs:
  - csharp
  - vb
  name: KebabCaseNamingConvention
  nameWithType: KebabCaseNamingConvention
  fullName: NeerCore.Api.KebabCaseNamingConvention
  type: Class
  source:
    remote:
      path: src/NeerCore.Api/KebabCaseNamingConvention.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: KebabCaseNamingConvention
    path: ../src/NeerCore.Api/KebabCaseNamingConvention.cs
    startLine: 12
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api
  summary: "\nConfigures ASP.NET Core controllers to use kebab case naming by default.\n"
  remarks: kebab-case-example
  example: []
  syntax:
    content: 'public sealed class KebabCaseNamingConvention : IOutboundParameterTransformer'
    content.vb: >-
      Public NotInheritable Class KebabCaseNamingConvention
          Inherits IOutboundParameterTransformer
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: NeerCore.Api.KebabCaseNamingConvention.Use(MvcOptions)
  commentId: M:NeerCore.Api.KebabCaseNamingConvention.Use(MvcOptions)
  id: Use(MvcOptions)
  parent: NeerCore.Api.KebabCaseNamingConvention
  langs:
  - csharp
  - vb
  name: Use(MvcOptions)
  nameWithType: KebabCaseNamingConvention.Use(MvcOptions)
  fullName: NeerCore.Api.KebabCaseNamingConvention.Use(MvcOptions)
  type: Method
  source:
    remote:
      path: src/NeerCore.Api/KebabCaseNamingConvention.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: Use
    path: ../src/NeerCore.Api/KebabCaseNamingConvention.cs
    startLine: 17
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api
  summary: "\nUsed to convert ControllerClassNames to kebab-case-style routes.\n"
  example: []
  syntax:
    content: public static void Use(MvcOptions options)
    parameters:
    - id: options
      type: MvcOptions
    content.vb: Public Shared Sub Use(options As MvcOptions)
  overload: NeerCore.Api.KebabCaseNamingConvention.Use*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NeerCore.Api.KebabCaseNamingConvention.TransformOutbound(System.Nullable{System.Object})
  commentId: M:NeerCore.Api.KebabCaseNamingConvention.TransformOutbound(System.Nullable{System.Object})
  id: TransformOutbound(System.Nullable{System.Object})
  parent: NeerCore.Api.KebabCaseNamingConvention
  langs:
  - csharp
  - vb
  name: TransformOutbound(Nullable<Object>)
  nameWithType: KebabCaseNamingConvention.TransformOutbound(Nullable<Object>)
  fullName: NeerCore.Api.KebabCaseNamingConvention.TransformOutbound(System.Nullable<System.Object>)
  type: Method
  source:
    remote:
      path: src/NeerCore.Api/KebabCaseNamingConvention.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: TransformOutbound
    path: ../src/NeerCore.Api/KebabCaseNamingConvention.cs
    startLine: 24
  assemblies:
  - NeerCore.Api
  namespace: NeerCore.Api
  syntax:
    content: public string? TransformOutbound(object? value)
    parameters:
    - id: value
      type: System.Nullable{System.Object}
    return:
      type: System.Nullable{System.String}
    content.vb: Public Function TransformOutbound(value As Object?) As String?
  overload: NeerCore.Api.KebabCaseNamingConvention.TransformOutbound*
  nameWithType.vb: KebabCaseNamingConvention.TransformOutbound(Nullable(Of Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NeerCore.Api.KebabCaseNamingConvention.TransformOutbound(System.Nullable(Of System.Object))
  name.vb: TransformOutbound(Nullable(Of Object))
references:
- uid: NeerCore.Api
  commentId: N:NeerCore.Api
  name: NeerCore.Api
  nameWithType: NeerCore.Api
  fullName: NeerCore.Api
- uid: NeerCore.Api.KebabCaseNamingConvention.Use*
  commentId: Overload:NeerCore.Api.KebabCaseNamingConvention.Use
  name: Use
  nameWithType: KebabCaseNamingConvention.Use
  fullName: NeerCore.Api.KebabCaseNamingConvention.Use
- uid: MvcOptions
  commentId: '!:MvcOptions'
  isExternal: true
  name: MvcOptions
  nameWithType: MvcOptions
  fullName: MvcOptions
- uid: NeerCore.Api.KebabCaseNamingConvention.TransformOutbound*
  commentId: Overload:NeerCore.Api.KebabCaseNamingConvention.TransformOutbound
  name: TransformOutbound
  nameWithType: KebabCaseNamingConvention.TransformOutbound
  fullName: NeerCore.Api.KebabCaseNamingConvention.TransformOutbound
- uid: System.Nullable{System.Object}
  commentId: '!:System.Nullable{System.Object}'
  definition: System.Nullable`1
  name: Nullable<Object>
  nameWithType: Nullable<Object>
  fullName: System.Nullable<System.Object>
  nameWithType.vb: Nullable(Of Object)
  fullName.vb: System.Nullable(Of System.Object)
  name.vb: Nullable(Of Object)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.String}
  commentId: '!:System.Nullable{System.String}'
  definition: System.Nullable`1
  name: Nullable<String>
  nameWithType: Nullable<String>
  fullName: System.Nullable<System.String>
  nameWithType.vb: Nullable(Of String)
  fullName.vb: System.Nullable(Of System.String)
  name.vb: Nullable(Of String)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
