### YamlMime:ManagedReference
items:
- uid: NeerCore.DependencyInjection.ServiceAttribute`1
  commentId: T:NeerCore.DependencyInjection.ServiceAttribute`1
  id: ServiceAttribute`1
  parent: NeerCore.DependencyInjection
  children:
  - NeerCore.DependencyInjection.ServiceAttribute`1.#ctor
  - NeerCore.DependencyInjection.ServiceAttribute`1.ServiceType
  langs:
  - csharp
  - vb
  name: ServiceAttribute<T>
  nameWithType: ServiceAttribute<T>
  fullName: NeerCore.DependencyInjection.ServiceAttribute<T>
  type: Class
  source:
    remote:
      path: src/NeerCore.DependencyInjection/ServiceAttribute.Generic.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ServiceAttribute
    path: src/NeerCore.DependencyInjection/ServiceAttribute.Generic.cs
    startLine: 8
  assemblies:
  - NeerCore.DependencyInjection
  namespace: NeerCore.DependencyInjection
  summary: "\nAttribute to simple reference your service class with DI.\n"
  remarks: "\nGeneric overload supported only in .NET 7\n"
  example: []
  syntax:
    content: 'public class ServiceAttribute<T> : ServiceAttribute'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class ServiceAttribute(Of T)

          Inherits ServiceAttribute
  inheritance:
  - System.Object
  - NeerCore.DependencyInjection.ServiceAttribute
  inheritedMembers:
  - NeerCore.DependencyInjection.ServiceAttribute.Lifetime
  - NeerCore.DependencyInjection.ServiceAttribute.InjectionType
  - NeerCore.DependencyInjection.ServiceAttribute.Environment
  - NeerCore.DependencyInjection.ServiceAttribute.ProductionOnly
  - NeerCore.DependencyInjection.ServiceAttribute.DevelopmentOnly
  nameWithType.vb: ServiceAttribute(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: NeerCore.DependencyInjection.ServiceAttribute(Of T)
  name.vb: ServiceAttribute(Of T)
- uid: NeerCore.DependencyInjection.ServiceAttribute`1.ServiceType
  commentId: P:NeerCore.DependencyInjection.ServiceAttribute`1.ServiceType
  id: ServiceType
  parent: NeerCore.DependencyInjection.ServiceAttribute`1
  langs:
  - csharp
  - vb
  name: ServiceType
  nameWithType: ServiceAttribute<T>.ServiceType
  fullName: NeerCore.DependencyInjection.ServiceAttribute<T>.ServiceType
  type: Property
  source:
    remote:
      path: src/NeerCore.DependencyInjection/ServiceAttribute.Generic.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ServiceType
    path: src/NeerCore.DependencyInjection/ServiceAttribute.Generic.cs
    startLine: 11
  assemblies:
  - NeerCore.DependencyInjection
  namespace: NeerCore.DependencyInjection
  example: []
  syntax:
    content: public sealed override Type? ServiceType { get; set; }
    parameters: []
    return:
      type: System.Nullable{Type}
    content.vb: Public NotOverridable Overrides Property ServiceType As Type?
  overridden: NeerCore.DependencyInjection.ServiceAttribute.ServiceType
  overload: NeerCore.DependencyInjection.ServiceAttribute`1.ServiceType*
  nameWithType.vb: ServiceAttribute(Of T).ServiceType
  modifiers.csharp:
  - public
  - sealed
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
  fullName.vb: NeerCore.DependencyInjection.ServiceAttribute(Of T).ServiceType
- uid: NeerCore.DependencyInjection.ServiceAttribute`1.#ctor
  commentId: M:NeerCore.DependencyInjection.ServiceAttribute`1.#ctor
  id: '#ctor'
  parent: NeerCore.DependencyInjection.ServiceAttribute`1
  langs:
  - csharp
  - vb
  name: ServiceAttribute()
  nameWithType: ServiceAttribute<T>.ServiceAttribute()
  fullName: NeerCore.DependencyInjection.ServiceAttribute<T>.ServiceAttribute()
  type: Constructor
  source:
    remote:
      path: src/NeerCore.DependencyInjection/ServiceAttribute.Generic.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: .ctor
    path: src/NeerCore.DependencyInjection/ServiceAttribute.Generic.cs
    startLine: 13
  assemblies:
  - NeerCore.DependencyInjection
  namespace: NeerCore.DependencyInjection
  syntax:
    content: public ServiceAttribute()
    content.vb: Public Sub New
  overload: NeerCore.DependencyInjection.ServiceAttribute`1.#ctor*
  nameWithType.vb: ServiceAttribute(Of T).ServiceAttribute()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NeerCore.DependencyInjection.ServiceAttribute(Of T).ServiceAttribute()
references:
- uid: NeerCore.DependencyInjection
  commentId: N:NeerCore.DependencyInjection
  name: NeerCore.DependencyInjection
  nameWithType: NeerCore.DependencyInjection
  fullName: NeerCore.DependencyInjection
- uid: NeerCore.DependencyInjection.ServiceAttribute
  commentId: T:NeerCore.DependencyInjection.ServiceAttribute
  parent: NeerCore.DependencyInjection
  name: ServiceAttribute
  nameWithType: ServiceAttribute
  fullName: NeerCore.DependencyInjection.ServiceAttribute
- uid: NeerCore.DependencyInjection.ServiceAttribute.Lifetime
  commentId: P:NeerCore.DependencyInjection.ServiceAttribute.Lifetime
  parent: NeerCore.DependencyInjection.ServiceAttribute
  name: Lifetime
  nameWithType: ServiceAttribute.Lifetime
  fullName: NeerCore.DependencyInjection.ServiceAttribute.Lifetime
- uid: NeerCore.DependencyInjection.ServiceAttribute.InjectionType
  commentId: P:NeerCore.DependencyInjection.ServiceAttribute.InjectionType
  parent: NeerCore.DependencyInjection.ServiceAttribute
  name: InjectionType
  nameWithType: ServiceAttribute.InjectionType
  fullName: NeerCore.DependencyInjection.ServiceAttribute.InjectionType
- uid: NeerCore.DependencyInjection.ServiceAttribute.Environment
  commentId: P:NeerCore.DependencyInjection.ServiceAttribute.Environment
  parent: NeerCore.DependencyInjection.ServiceAttribute
  name: Environment
  nameWithType: ServiceAttribute.Environment
  fullName: NeerCore.DependencyInjection.ServiceAttribute.Environment
- uid: NeerCore.DependencyInjection.ServiceAttribute.ProductionOnly
  commentId: P:NeerCore.DependencyInjection.ServiceAttribute.ProductionOnly
  parent: NeerCore.DependencyInjection.ServiceAttribute
  name: ProductionOnly
  nameWithType: ServiceAttribute.ProductionOnly
  fullName: NeerCore.DependencyInjection.ServiceAttribute.ProductionOnly
- uid: NeerCore.DependencyInjection.ServiceAttribute.DevelopmentOnly
  commentId: P:NeerCore.DependencyInjection.ServiceAttribute.DevelopmentOnly
  parent: NeerCore.DependencyInjection.ServiceAttribute
  name: DevelopmentOnly
  nameWithType: ServiceAttribute.DevelopmentOnly
  fullName: NeerCore.DependencyInjection.ServiceAttribute.DevelopmentOnly
- uid: NeerCore.DependencyInjection.ServiceAttribute`1.ServiceType
  commentId: P:NeerCore.DependencyInjection.ServiceAttribute`1.ServiceType
  isExternal: true
- uid: NeerCore.DependencyInjection.ServiceAttribute.ServiceType
  commentId: P:NeerCore.DependencyInjection.ServiceAttribute.ServiceType
  parent: NeerCore.DependencyInjection.ServiceAttribute
  name: ServiceType
  nameWithType: ServiceAttribute.ServiceType
  fullName: NeerCore.DependencyInjection.ServiceAttribute.ServiceType
- uid: NeerCore.DependencyInjection.ServiceAttribute`1.ServiceType*
  commentId: Overload:NeerCore.DependencyInjection.ServiceAttribute`1.ServiceType
  name: ServiceType
  nameWithType: ServiceAttribute<T>.ServiceType
  fullName: NeerCore.DependencyInjection.ServiceAttribute<T>.ServiceType
  nameWithType.vb: ServiceAttribute(Of T).ServiceType
  fullName.vb: NeerCore.DependencyInjection.ServiceAttribute(Of T).ServiceType
- uid: System.Nullable{Type}
  commentId: '!:System.Nullable{Type}'
  definition: System.Nullable`1
  name: Nullable<Type>
  nameWithType: Nullable<Type>
  fullName: System.Nullable<Type>
  nameWithType.vb: Nullable(Of Type)
  fullName.vb: System.Nullable(Of Type)
  name.vb: Nullable(Of Type)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.DependencyInjection.ServiceAttribute`1.#ctor*
  commentId: Overload:NeerCore.DependencyInjection.ServiceAttribute`1.#ctor
  name: ServiceAttribute
  nameWithType: ServiceAttribute<T>.ServiceAttribute
  fullName: NeerCore.DependencyInjection.ServiceAttribute<T>.ServiceAttribute
  nameWithType.vb: ServiceAttribute(Of T).ServiceAttribute
  fullName.vb: NeerCore.DependencyInjection.ServiceAttribute(Of T).ServiceAttribute
