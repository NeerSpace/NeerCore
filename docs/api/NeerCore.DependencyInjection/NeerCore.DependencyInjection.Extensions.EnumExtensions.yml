### YamlMime:ManagedReference
items:
- uid: NeerCore.DependencyInjection.Extensions.EnumExtensions
  commentId: T:NeerCore.DependencyInjection.Extensions.EnumExtensions
  id: EnumExtensions
  parent: NeerCore.DependencyInjection.Extensions
  children:
  - NeerCore.DependencyInjection.Extensions.EnumExtensions.ToInstanceLifetime(ServiceLifetime)
  - NeerCore.DependencyInjection.Extensions.EnumExtensions.ToServiceLifetimes(NeerCore.DependencyInjection.Lifetime)
  langs:
  - csharp
  - vb
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: NeerCore.DependencyInjection.Extensions.EnumExtensions
  type: Class
  source:
    remote:
      path: src/NeerCore.DependencyInjection/Extensions/EnumExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: EnumExtensions
    path: src/NeerCore.DependencyInjection/Extensions/EnumExtensions.cs
    startLine: 4
  assemblies:
  - NeerCore.DependencyInjection
  namespace: NeerCore.DependencyInjection.Extensions
  syntax:
    content: 'public static class EnumExtensions : object'
    content.vb: >-
      Public Module EnumExtensions

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NeerCore.DependencyInjection.Extensions.EnumExtensions.ToServiceLifetimes(NeerCore.DependencyInjection.Lifetime)
  commentId: M:NeerCore.DependencyInjection.Extensions.EnumExtensions.ToServiceLifetimes(NeerCore.DependencyInjection.Lifetime)
  id: ToServiceLifetimes(NeerCore.DependencyInjection.Lifetime)
  isExtensionMethod: true
  parent: NeerCore.DependencyInjection.Extensions.EnumExtensions
  langs:
  - csharp
  - vb
  name: ToServiceLifetimes(Lifetime)
  nameWithType: EnumExtensions.ToServiceLifetimes(Lifetime)
  fullName: NeerCore.DependencyInjection.Extensions.EnumExtensions.ToServiceLifetimes(NeerCore.DependencyInjection.Lifetime)
  type: Method
  source:
    remote:
      path: src/NeerCore.DependencyInjection/Extensions/EnumExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ToServiceLifetimes
    path: src/NeerCore.DependencyInjection/Extensions/EnumExtensions.cs
    startLine: 6
  assemblies:
  - NeerCore.DependencyInjection
  namespace: NeerCore.DependencyInjection.Extensions
  syntax:
    content: public static IEnumerable<ServiceLifetime> ToServiceLifetimes(this Lifetime lifetime)
    parameters:
    - id: lifetime
      type: NeerCore.DependencyInjection.Lifetime
    return:
      type: IEnumerable{ServiceLifetime}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToServiceLifetimes(lifetime As Lifetime) As IEnumerable(Of ServiceLifetime)
  overload: NeerCore.DependencyInjection.Extensions.EnumExtensions.ToServiceLifetimes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NeerCore.DependencyInjection.Extensions.EnumExtensions.ToInstanceLifetime(ServiceLifetime)
  commentId: M:NeerCore.DependencyInjection.Extensions.EnumExtensions.ToInstanceLifetime(ServiceLifetime)
  id: ToInstanceLifetime(ServiceLifetime)
  isExtensionMethod: true
  parent: NeerCore.DependencyInjection.Extensions.EnumExtensions
  langs:
  - csharp
  - vb
  name: ToInstanceLifetime(ServiceLifetime)
  nameWithType: EnumExtensions.ToInstanceLifetime(ServiceLifetime)
  fullName: NeerCore.DependencyInjection.Extensions.EnumExtensions.ToInstanceLifetime(ServiceLifetime)
  type: Method
  source:
    remote:
      path: src/NeerCore.DependencyInjection/Extensions/EnumExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ToInstanceLifetime
    path: src/NeerCore.DependencyInjection/Extensions/EnumExtensions.cs
    startLine: 16
  assemblies:
  - NeerCore.DependencyInjection
  namespace: NeerCore.DependencyInjection.Extensions
  syntax:
    content: public static Lifetime ToInstanceLifetime(this ServiceLifetime serviceLifetime)
    parameters:
    - id: serviceLifetime
      type: ServiceLifetime
    return:
      type: NeerCore.DependencyInjection.Lifetime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToInstanceLifetime(serviceLifetime As ServiceLifetime) As Lifetime
  overload: NeerCore.DependencyInjection.Extensions.EnumExtensions.ToInstanceLifetime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: NeerCore.DependencyInjection.Extensions
  commentId: N:NeerCore.DependencyInjection.Extensions
  name: NeerCore.DependencyInjection.Extensions
  nameWithType: NeerCore.DependencyInjection.Extensions
  fullName: NeerCore.DependencyInjection.Extensions
- uid: NeerCore.DependencyInjection.Extensions.EnumExtensions.ToServiceLifetimes*
  commentId: Overload:NeerCore.DependencyInjection.Extensions.EnumExtensions.ToServiceLifetimes
  name: ToServiceLifetimes
  nameWithType: EnumExtensions.ToServiceLifetimes
  fullName: NeerCore.DependencyInjection.Extensions.EnumExtensions.ToServiceLifetimes
- uid: NeerCore.DependencyInjection.Lifetime
  commentId: T:NeerCore.DependencyInjection.Lifetime
  parent: NeerCore.DependencyInjection
  name: Lifetime
  nameWithType: Lifetime
  fullName: NeerCore.DependencyInjection.Lifetime
- uid: IEnumerable{ServiceLifetime}
  commentId: '!:IEnumerable{ServiceLifetime}'
  definition: IEnumerable`1
  name: IEnumerable<ServiceLifetime>
  nameWithType: IEnumerable<ServiceLifetime>
  fullName: IEnumerable<ServiceLifetime>
  nameWithType.vb: IEnumerable(Of ServiceLifetime)
  fullName.vb: IEnumerable(Of ServiceLifetime)
  name.vb: IEnumerable(Of ServiceLifetime)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ServiceLifetime
    name: ServiceLifetime
    nameWithType: ServiceLifetime
    fullName: ServiceLifetime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ServiceLifetime
    name: ServiceLifetime
    nameWithType: ServiceLifetime
    fullName: ServiceLifetime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.DependencyInjection
  commentId: N:NeerCore.DependencyInjection
  name: NeerCore.DependencyInjection
  nameWithType: NeerCore.DependencyInjection
  fullName: NeerCore.DependencyInjection
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.DependencyInjection.Extensions.EnumExtensions.ToInstanceLifetime*
  commentId: Overload:NeerCore.DependencyInjection.Extensions.EnumExtensions.ToInstanceLifetime
  name: ToInstanceLifetime
  nameWithType: EnumExtensions.ToInstanceLifetime
  fullName: NeerCore.DependencyInjection.Extensions.EnumExtensions.ToInstanceLifetime
- uid: ServiceLifetime
  isExternal: true
  name: ServiceLifetime
  nameWithType: ServiceLifetime
  fullName: ServiceLifetime
