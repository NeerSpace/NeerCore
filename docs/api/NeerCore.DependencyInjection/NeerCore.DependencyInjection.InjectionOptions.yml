### YamlMime:ManagedReference
items:
- uid: NeerCore.DependencyInjection.InjectionOptions
  commentId: T:NeerCore.DependencyInjection.InjectionOptions
  id: InjectionOptions
  parent: NeerCore.DependencyInjection
  children:
  - NeerCore.DependencyInjection.InjectionOptions.DefaultInjectionType
  - NeerCore.DependencyInjection.InjectionOptions.DefaultLifetime
  - NeerCore.DependencyInjection.InjectionOptions.Environment
  - NeerCore.DependencyInjection.InjectionOptions.ResolveInternalImplementations
  - NeerCore.DependencyInjection.InjectionOptions.ServiceAssemblies
  langs:
  - csharp
  - vb
  name: InjectionOptions
  nameWithType: InjectionOptions
  fullName: NeerCore.DependencyInjection.InjectionOptions
  type: Class
  source:
    remote:
      path: src/NeerCore.DependencyInjection/InjectionOptions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: InjectionOptions
    path: src/NeerCore.DependencyInjection/InjectionOptions.cs
    startLine: 8
  assemblies:
  - NeerCore.DependencyInjection
  namespace: NeerCore.DependencyInjection
  summary: "\nService injection configuration options.\n"
  example: []
  syntax:
    content: 'public sealed class InjectionOptions : object'
    content.vb: >-
      Public NotInheritable Class InjectionOptions

          Inherits Object
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{NeerCore.DependencyInjection.InjectionOptions}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: NeerCore.DependencyInjection.InjectionOptions.ServiceAssemblies
  commentId: P:NeerCore.DependencyInjection.InjectionOptions.ServiceAssemblies
  id: ServiceAssemblies
  parent: NeerCore.DependencyInjection.InjectionOptions
  langs:
  - csharp
  - vb
  name: ServiceAssemblies
  nameWithType: InjectionOptions.ServiceAssemblies
  fullName: NeerCore.DependencyInjection.InjectionOptions.ServiceAssemblies
  type: Property
  source:
    remote:
      path: src/NeerCore.DependencyInjection/InjectionOptions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ServiceAssemblies
    path: src/NeerCore.DependencyInjection/InjectionOptions.cs
    startLine: 13
  assemblies:
  - NeerCore.DependencyInjection
  namespace: NeerCore.DependencyInjection
  summary: "\nA list of <see cref=\"!:Assembly\"></see> where stored services marked with <xref href=\"NeerCore.DependencyInjection.ServiceAttribute\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IEnumerable<Assembly>? ServiceAssemblies { get; set; }
    parameters: []
    return:
      type: System.Nullable{IEnumerable{Assembly}}
    content.vb: Public Property ServiceAssemblies As IEnumerable(Of Assembly)?
  overload: NeerCore.DependencyInjection.InjectionOptions.ServiceAssemblies*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.DependencyInjection.InjectionOptions.DefaultLifetime
  commentId: P:NeerCore.DependencyInjection.InjectionOptions.DefaultLifetime
  id: DefaultLifetime
  parent: NeerCore.DependencyInjection.InjectionOptions
  langs:
  - csharp
  - vb
  name: DefaultLifetime
  nameWithType: InjectionOptions.DefaultLifetime
  fullName: NeerCore.DependencyInjection.InjectionOptions.DefaultLifetime
  type: Property
  source:
    remote:
      path: src/NeerCore.DependencyInjection/InjectionOptions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: DefaultLifetime
    path: src/NeerCore.DependencyInjection/InjectionOptions.cs
    startLine: 18
  assemblies:
  - NeerCore.DependencyInjection
  namespace: NeerCore.DependencyInjection
  summary: "\nThe default lifetime for all services where the `Lifetime` is not manually overridden.\n"
  example: []
  syntax:
    content: public ServiceLifetime DefaultLifetime { get; set; }
    parameters: []
    return:
      type: ServiceLifetime
    content.vb: Public Property DefaultLifetime As ServiceLifetime
  overload: NeerCore.DependencyInjection.InjectionOptions.DefaultLifetime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.DependencyInjection.InjectionOptions.DefaultInjectionType
  commentId: P:NeerCore.DependencyInjection.InjectionOptions.DefaultInjectionType
  id: DefaultInjectionType
  parent: NeerCore.DependencyInjection.InjectionOptions
  langs:
  - csharp
  - vb
  name: DefaultInjectionType
  nameWithType: InjectionOptions.DefaultInjectionType
  fullName: NeerCore.DependencyInjection.InjectionOptions.DefaultInjectionType
  type: Property
  source:
    remote:
      path: src/NeerCore.DependencyInjection/InjectionOptions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: DefaultInjectionType
    path: src/NeerCore.DependencyInjection/InjectionOptions.cs
    startLine: 23
  assemblies:
  - NeerCore.DependencyInjection
  namespace: NeerCore.DependencyInjection
  summary: "\nThe default injection mode for all services where the `InjectionType` is not manually overridden.\n"
  example: []
  syntax:
    content: public InjectionType DefaultInjectionType { get; set; }
    parameters: []
    return:
      type: NeerCore.DependencyInjection.InjectionType
    content.vb: Public Property DefaultInjectionType As InjectionType
  overload: NeerCore.DependencyInjection.InjectionOptions.DefaultInjectionType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.DependencyInjection.InjectionOptions.ResolveInternalImplementations
  commentId: P:NeerCore.DependencyInjection.InjectionOptions.ResolveInternalImplementations
  id: ResolveInternalImplementations
  parent: NeerCore.DependencyInjection.InjectionOptions
  langs:
  - csharp
  - vb
  name: ResolveInternalImplementations
  nameWithType: InjectionOptions.ResolveInternalImplementations
  fullName: NeerCore.DependencyInjection.InjectionOptions.ResolveInternalImplementations
  type: Property
  source:
    remote:
      path: src/NeerCore.DependencyInjection/InjectionOptions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ResolveInternalImplementations
    path: src/NeerCore.DependencyInjection/InjectionOptions.cs
    startLine: 29
  assemblies:
  - NeerCore.DependencyInjection
  namespace: NeerCore.DependencyInjection
  summary: "\nAllows (true) or disallows (false) the resolver to inject\nthe implementations with internal visibility.\n"
  example: []
  syntax:
    content: public bool ResolveInternalImplementations { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ResolveInternalImplementations As Boolean
  overload: NeerCore.DependencyInjection.InjectionOptions.ResolveInternalImplementations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.DependencyInjection.InjectionOptions.Environment
  commentId: P:NeerCore.DependencyInjection.InjectionOptions.Environment
  id: Environment
  parent: NeerCore.DependencyInjection.InjectionOptions
  langs:
  - csharp
  - vb
  name: Environment
  nameWithType: InjectionOptions.Environment
  fullName: NeerCore.DependencyInjection.InjectionOptions.Environment
  type: Property
  source:
    remote:
      path: src/NeerCore.DependencyInjection/InjectionOptions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: Environment
    path: src/NeerCore.DependencyInjection/InjectionOptions.cs
    startLine: 35
  assemblies:
  - NeerCore.DependencyInjection
  namespace: NeerCore.DependencyInjection
  summary: "\nOverrides global application environment with a value you define\n<strong>(only when registering services)</strong>.\n"
  example: []
  syntax:
    content: public string? Environment { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.String}
    content.vb: Public Property Environment As String?
  overload: NeerCore.DependencyInjection.InjectionOptions.Environment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: NeerCore.DependencyInjection
  commentId: N:NeerCore.DependencyInjection
  name: NeerCore.DependencyInjection
  nameWithType: NeerCore.DependencyInjection
  fullName: NeerCore.DependencyInjection
- uid: System.IEquatable{NeerCore.DependencyInjection.InjectionOptions}
  commentId: '!:System.IEquatable{NeerCore.DependencyInjection.InjectionOptions}'
  definition: System.IEquatable`1
  name: IEquatable<InjectionOptions>
  nameWithType: IEquatable<InjectionOptions>
  fullName: System.IEquatable<NeerCore.DependencyInjection.InjectionOptions>
  nameWithType.vb: IEquatable(Of InjectionOptions)
  fullName.vb: System.IEquatable(Of NeerCore.DependencyInjection.InjectionOptions)
  name.vb: IEquatable(Of InjectionOptions)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NeerCore.DependencyInjection.InjectionOptions
    name: InjectionOptions
    nameWithType: InjectionOptions
    fullName: NeerCore.DependencyInjection.InjectionOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NeerCore.DependencyInjection.InjectionOptions
    name: InjectionOptions
    nameWithType: InjectionOptions
    fullName: NeerCore.DependencyInjection.InjectionOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: '!:System.IEquatable`1'
  isExternal: true
  name: IEquatable<>
  nameWithType: IEquatable<>
  fullName: System.IEquatable<>
  nameWithType.vb: IEquatable(Of )
  fullName.vb: System.IEquatable(Of )
  name.vb: IEquatable(Of )
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.DependencyInjection.ServiceAttribute
  commentId: T:NeerCore.DependencyInjection.ServiceAttribute
  parent: NeerCore.DependencyInjection
  name: ServiceAttribute
  nameWithType: ServiceAttribute
  fullName: NeerCore.DependencyInjection.ServiceAttribute
- uid: NeerCore.DependencyInjection.InjectionOptions.ServiceAssemblies*
  commentId: Overload:NeerCore.DependencyInjection.InjectionOptions.ServiceAssemblies
  name: ServiceAssemblies
  nameWithType: InjectionOptions.ServiceAssemblies
  fullName: NeerCore.DependencyInjection.InjectionOptions.ServiceAssemblies
- uid: System.Nullable{IEnumerable{Assembly}}
  commentId: '!:System.Nullable{IEnumerable{Assembly}}'
  definition: System.Nullable`1
  name: Nullable<IEnumerable<Assembly>>
  nameWithType: Nullable<IEnumerable<Assembly>>
  fullName: System.Nullable<IEnumerable<Assembly>>
  nameWithType.vb: Nullable(Of IEnumerable(Of Assembly))
  fullName.vb: System.Nullable(Of IEnumerable(Of Assembly))
  name.vb: Nullable(Of IEnumerable(Of Assembly))
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.DependencyInjection.InjectionOptions.DefaultLifetime*
  commentId: Overload:NeerCore.DependencyInjection.InjectionOptions.DefaultLifetime
  name: DefaultLifetime
  nameWithType: InjectionOptions.DefaultLifetime
  fullName: NeerCore.DependencyInjection.InjectionOptions.DefaultLifetime
- uid: ServiceLifetime
  isExternal: true
  name: ServiceLifetime
  nameWithType: ServiceLifetime
  fullName: ServiceLifetime
- uid: NeerCore.DependencyInjection.InjectionOptions.DefaultInjectionType*
  commentId: Overload:NeerCore.DependencyInjection.InjectionOptions.DefaultInjectionType
  name: DefaultInjectionType
  nameWithType: InjectionOptions.DefaultInjectionType
  fullName: NeerCore.DependencyInjection.InjectionOptions.DefaultInjectionType
- uid: NeerCore.DependencyInjection.InjectionType
  commentId: T:NeerCore.DependencyInjection.InjectionType
  parent: NeerCore.DependencyInjection
  name: InjectionType
  nameWithType: InjectionType
  fullName: NeerCore.DependencyInjection.InjectionType
- uid: NeerCore.DependencyInjection.InjectionOptions.ResolveInternalImplementations*
  commentId: Overload:NeerCore.DependencyInjection.InjectionOptions.ResolveInternalImplementations
  name: ResolveInternalImplementations
  nameWithType: InjectionOptions.ResolveInternalImplementations
  fullName: NeerCore.DependencyInjection.InjectionOptions.ResolveInternalImplementations
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NeerCore.DependencyInjection.InjectionOptions.Environment*
  commentId: Overload:NeerCore.DependencyInjection.InjectionOptions.Environment
  name: Environment
  nameWithType: InjectionOptions.Environment
  fullName: NeerCore.DependencyInjection.InjectionOptions.Environment
- uid: System.Nullable{System.String}
  commentId: '!:System.Nullable{System.String}'
  definition: System.Nullable`1
  name: Nullable<String>
  nameWithType: Nullable<String>
  fullName: System.Nullable<System.String>
  nameWithType.vb: Nullable(Of String)
  fullName.vb: System.Nullable(Of System.String)
  name.vb: Nullable(Of String)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
