### YamlMime:ManagedReference
items:
- uid: NeerCore.Logging.Extensions.ServiceCollectionExtensions
  commentId: T:NeerCore.Logging.Extensions.ServiceCollectionExtensions
  id: ServiceCollectionExtensions
  parent: NeerCore.Logging.Extensions
  children:
  - NeerCore.Logging.Extensions.ServiceCollectionExtensions.GetLoggerOfType(IServiceProvider,Type)
  langs:
  - csharp
  - vb
  name: ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
  fullName: NeerCore.Logging.Extensions.ServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: src/NeerCore.Logging.NLog/Extensions/ServiceCollectionExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ServiceCollectionExtensions
    path: src/NeerCore.Logging.NLog/Extensions/ServiceCollectionExtensions.cs
    startLine: 5
  assemblies:
  - NeerCore.Logging.NLog
  namespace: NeerCore.Logging.Extensions
  syntax:
    content: 'public static class ServiceCollectionExtensions : object'
    content.vb: >-
      Public Module ServiceCollectionExtensions

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NeerCore.Logging.Extensions.ServiceCollectionExtensions.GetLoggerOfType(IServiceProvider,Type)
  commentId: M:NeerCore.Logging.Extensions.ServiceCollectionExtensions.GetLoggerOfType(IServiceProvider,Type)
  id: GetLoggerOfType(IServiceProvider,Type)
  isExtensionMethod: true
  parent: NeerCore.Logging.Extensions.ServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: GetLoggerOfType(IServiceProvider, Type)
  nameWithType: ServiceCollectionExtensions.GetLoggerOfType(IServiceProvider, Type)
  fullName: NeerCore.Logging.Extensions.ServiceCollectionExtensions.GetLoggerOfType(IServiceProvider, Type)
  type: Method
  source:
    remote:
      path: src/NeerCore.Logging.NLog/Extensions/ServiceCollectionExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: GetLoggerOfType
    path: src/NeerCore.Logging.NLog/Extensions/ServiceCollectionExtensions.cs
    startLine: 7
  assemblies:
  - NeerCore.Logging.NLog
  namespace: NeerCore.Logging.Extensions
  syntax:
    content: public static ILogger GetLoggerOfType(this IServiceProvider provider, Type type)
    parameters:
    - id: provider
      type: IServiceProvider
    - id: type
      type: Type
    return:
      type: ILogger
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetLoggerOfType(provider As IServiceProvider, type As Type) As ILogger
  overload: NeerCore.Logging.Extensions.ServiceCollectionExtensions.GetLoggerOfType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: NeerCore.Logging.Extensions
  commentId: N:NeerCore.Logging.Extensions
  name: NeerCore.Logging.Extensions
  nameWithType: NeerCore.Logging.Extensions
  fullName: NeerCore.Logging.Extensions
- uid: NeerCore.Logging.Extensions.ServiceCollectionExtensions.GetLoggerOfType*
  commentId: Overload:NeerCore.Logging.Extensions.ServiceCollectionExtensions.GetLoggerOfType
  name: GetLoggerOfType
  nameWithType: ServiceCollectionExtensions.GetLoggerOfType
  fullName: NeerCore.Logging.Extensions.ServiceCollectionExtensions.GetLoggerOfType
- uid: IServiceProvider
  commentId: '!:IServiceProvider'
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: IServiceProvider
- uid: Type
  commentId: '!:Type'
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
