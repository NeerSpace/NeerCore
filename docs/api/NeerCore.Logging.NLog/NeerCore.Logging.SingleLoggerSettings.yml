### YamlMime:ManagedReference
items:
- uid: NeerCore.Logging.SingleLoggerSettings
  commentId: T:NeerCore.Logging.SingleLoggerSettings
  id: SingleLoggerSettings
  parent: NeerCore.Logging
  children:
  - NeerCore.Logging.SingleLoggerSettings.Enabled
  - NeerCore.Logging.SingleLoggerSettings.FilePath
  - NeerCore.Logging.SingleLoggerSettings.ShortLoggerNames
  langs:
  - csharp
  - vb
  name: SingleLoggerSettings
  nameWithType: SingleLoggerSettings
  fullName: NeerCore.Logging.SingleLoggerSettings
  type: Class
  source:
    remote:
      path: src/NeerCore.Logging.NLog/LoggingSettings.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: SingleLoggerSettings
    path: src/NeerCore.Logging.NLog/LoggingSettings.cs
    startLine: 47
  assemblies:
  - NeerCore.Logging.NLog
  namespace: NeerCore.Logging
  syntax:
    content: 'public sealed class SingleLoggerSettings : object'
    content.vb: >-
      Public NotInheritable Class SingleLoggerSettings

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: NeerCore.Logging.SingleLoggerSettings.Enabled
  commentId: P:NeerCore.Logging.SingleLoggerSettings.Enabled
  id: Enabled
  parent: NeerCore.Logging.SingleLoggerSettings
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: SingleLoggerSettings.Enabled
  fullName: NeerCore.Logging.SingleLoggerSettings.Enabled
  type: Property
  source:
    remote:
      path: src/NeerCore.Logging.NLog/LoggingSettings.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: Enabled
    path: src/NeerCore.Logging.NLog/LoggingSettings.cs
    startLine: 53
  assemblies:
  - NeerCore.Logging.NLog
  namespace: NeerCore.Logging
  summary: "\nDisables specific logger if <strong>false</strong> or enables if <strong>true</strong>\n(<strong>true</strong> by default).\n"
  example: []
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: NeerCore.Logging.SingleLoggerSettings.Enabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.Logging.SingleLoggerSettings.FilePath
  commentId: P:NeerCore.Logging.SingleLoggerSettings.FilePath
  id: FilePath
  parent: NeerCore.Logging.SingleLoggerSettings
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: SingleLoggerSettings.FilePath
  fullName: NeerCore.Logging.SingleLoggerSettings.FilePath
  type: Property
  source:
    remote:
      path: src/NeerCore.Logging.NLog/LoggingSettings.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: FilePath
    path: src/NeerCore.Logging.NLog/LoggingSettings.cs
    startLine: 61
  assemblies:
  - NeerCore.Logging.NLog
  namespace: NeerCore.Logging
  summary: "\nPath and file name of the logs output file.\n"
  remarks: "\nEffects only on file loggers.\n"
  example: []
  syntax:
    content: public string? FilePath { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.String}
    content.vb: Public Property FilePath As String?
  overload: NeerCore.Logging.SingleLoggerSettings.FilePath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.Logging.SingleLoggerSettings.ShortLoggerNames
  commentId: P:NeerCore.Logging.SingleLoggerSettings.ShortLoggerNames
  id: ShortLoggerNames
  parent: NeerCore.Logging.SingleLoggerSettings
  langs:
  - csharp
  - vb
  name: ShortLoggerNames
  nameWithType: SingleLoggerSettings.ShortLoggerNames
  fullName: NeerCore.Logging.SingleLoggerSettings.ShortLoggerNames
  type: Property
  source:
    remote:
      path: src/NeerCore.Logging.NLog/LoggingSettings.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ShortLoggerNames
    path: src/NeerCore.Logging.NLog/LoggingSettings.cs
    startLine: 67
  assemblies:
  - NeerCore.Logging.NLog
  namespace: NeerCore.Logging
  summary: "\nIf <strong>true</strong> â€“ logger name in logs will be shorten\notherwise full logger names will be displayed.\n"
  example: []
  syntax:
    content: public bool ShortLoggerNames { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShortLoggerNames As Boolean
  overload: NeerCore.Logging.SingleLoggerSettings.ShortLoggerNames*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: NeerCore.Logging
  commentId: N:NeerCore.Logging
  name: NeerCore.Logging
  nameWithType: NeerCore.Logging
  fullName: NeerCore.Logging
- uid: NeerCore.Logging.SingleLoggerSettings.Enabled*
  commentId: Overload:NeerCore.Logging.SingleLoggerSettings.Enabled
  name: Enabled
  nameWithType: SingleLoggerSettings.Enabled
  fullName: NeerCore.Logging.SingleLoggerSettings.Enabled
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NeerCore.Logging.SingleLoggerSettings.FilePath*
  commentId: Overload:NeerCore.Logging.SingleLoggerSettings.FilePath
  name: FilePath
  nameWithType: SingleLoggerSettings.FilePath
  fullName: NeerCore.Logging.SingleLoggerSettings.FilePath
- uid: System.Nullable{System.String}
  commentId: '!:System.Nullable{System.String}'
  definition: System.Nullable`1
  name: Nullable<String>
  nameWithType: Nullable<String>
  fullName: System.Nullable<System.String>
  nameWithType.vb: Nullable(Of String)
  fullName.vb: System.Nullable(Of System.String)
  name.vb: Nullable(Of String)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.Logging.SingleLoggerSettings.ShortLoggerNames*
  commentId: Overload:NeerCore.Logging.SingleLoggerSettings.ShortLoggerNames
  name: ShortLoggerNames
  nameWithType: SingleLoggerSettings.ShortLoggerNames
  fullName: NeerCore.Logging.SingleLoggerSettings.ShortLoggerNames
