### YamlMime:ManagedReference
items:
- uid: NeerCore.Application.Abstractions.ICommandHandler`2
  commentId: T:NeerCore.Application.Abstractions.ICommandHandler`2
  id: ICommandHandler`2
  parent: NeerCore.Application.Abstractions
  children: []
  langs:
  - csharp
  - vb
  name: ICommandHandler<TCommand, TResponse>
  nameWithType: ICommandHandler<TCommand, TResponse>
  fullName: NeerCore.Application.Abstractions.ICommandHandler<TCommand, TResponse>
  type: Interface
  source:
    remote:
      path: src/NeerCore.Application.MediatR/Abstractions/ICommandHandler.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ICommandHandler
    path: ../src/NeerCore.Application.MediatR/Abstractions/ICommandHandler.cs
    startLine: 4
  assemblies:
  - NeerCore.Application.MediatR
  namespace: NeerCore.Application.Abstractions
  syntax:
    content: >-
      public interface ICommandHandler<in TCommand, TResponse>
          where TCommand : ICommand<TResponse>
    typeParameters:
    - id: TCommand
    - id: TResponse
    content.vb: >-
      Public Interface ICommandHandler(Of In TCommand As ICommand(Of TResponse), TResponse)
          Inherits IRequestHandler(Of TCommand, TResponse)
  nameWithType.vb: ICommandHandler(Of TCommand, TResponse)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: NeerCore.Application.Abstractions.ICommandHandler(Of TCommand, TResponse)
  name.vb: ICommandHandler(Of TCommand, TResponse)
references:
- uid: NeerCore.Application.Abstractions
  commentId: N:NeerCore.Application.Abstractions
  name: NeerCore.Application.Abstractions
  nameWithType: NeerCore.Application.Abstractions
  fullName: NeerCore.Application.Abstractions
