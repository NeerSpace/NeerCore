### YamlMime:ManagedReference
items:
- uid: NeerCore.Application.Abstractions
  commentId: N:NeerCore.Application.Abstractions
  id: NeerCore.Application.Abstractions
  children:
  - NeerCore.Application.Abstractions.ICommand
  - NeerCore.Application.Abstractions.ICommand`1
  - NeerCore.Application.Abstractions.ICommandHandler`1
  - NeerCore.Application.Abstractions.ICommandHandler`2
  - NeerCore.Application.Abstractions.IQuery`1
  - NeerCore.Application.Abstractions.IQueryHandler`2
  langs:
  - csharp
  - vb
  name: NeerCore.Application.Abstractions
  nameWithType: NeerCore.Application.Abstractions
  fullName: NeerCore.Application.Abstractions
  type: Namespace
  assemblies:
  - NeerCore.Application.MediatR
references:
- uid: NeerCore.Application.Abstractions.ICommand`1
  commentId: T:NeerCore.Application.Abstractions.ICommand`1
  name: ICommand<TResponse>
  nameWithType: ICommand<TResponse>
  fullName: NeerCore.Application.Abstractions.ICommand<TResponse>
  nameWithType.vb: ICommand(Of TResponse)
  fullName.vb: NeerCore.Application.Abstractions.ICommand(Of TResponse)
  name.vb: ICommand(Of TResponse)
  spec.csharp:
  - uid: NeerCore.Application.Abstractions.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: NeerCore.Application.Abstractions.ICommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NeerCore.Application.Abstractions.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: NeerCore.Application.Abstractions.ICommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.Application.Abstractions.ICommand
  commentId: T:NeerCore.Application.Abstractions.ICommand
  name: ICommand
  nameWithType: ICommand
  fullName: NeerCore.Application.Abstractions.ICommand
- uid: NeerCore.Application.Abstractions.ICommandHandler`2
  commentId: T:NeerCore.Application.Abstractions.ICommandHandler`2
  name: ICommandHandler<TCommand, TResponse>
  nameWithType: ICommandHandler<TCommand, TResponse>
  fullName: NeerCore.Application.Abstractions.ICommandHandler<TCommand, TResponse>
  nameWithType.vb: ICommandHandler(Of TCommand, TResponse)
  fullName.vb: NeerCore.Application.Abstractions.ICommandHandler(Of TCommand, TResponse)
  name.vb: ICommandHandler(Of TCommand, TResponse)
  spec.csharp:
  - uid: NeerCore.Application.Abstractions.ICommandHandler`2
    name: ICommandHandler
    nameWithType: ICommandHandler
    fullName: NeerCore.Application.Abstractions.ICommandHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NeerCore.Application.Abstractions.ICommandHandler`2
    name: ICommandHandler
    nameWithType: ICommandHandler
    fullName: NeerCore.Application.Abstractions.ICommandHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.Application.Abstractions.ICommandHandler`1
  commentId: T:NeerCore.Application.Abstractions.ICommandHandler`1
  name: ICommandHandler<TCommand>
  nameWithType: ICommandHandler<TCommand>
  fullName: NeerCore.Application.Abstractions.ICommandHandler<TCommand>
  nameWithType.vb: ICommandHandler(Of TCommand)
  fullName.vb: NeerCore.Application.Abstractions.ICommandHandler(Of TCommand)
  name.vb: ICommandHandler(Of TCommand)
  spec.csharp:
  - uid: NeerCore.Application.Abstractions.ICommandHandler`1
    name: ICommandHandler
    nameWithType: ICommandHandler
    fullName: NeerCore.Application.Abstractions.ICommandHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NeerCore.Application.Abstractions.ICommandHandler`1
    name: ICommandHandler
    nameWithType: ICommandHandler
    fullName: NeerCore.Application.Abstractions.ICommandHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.Application.Abstractions.IQuery`1
  commentId: T:NeerCore.Application.Abstractions.IQuery`1
  name: IQuery<TResponse>
  nameWithType: IQuery<TResponse>
  fullName: NeerCore.Application.Abstractions.IQuery<TResponse>
  nameWithType.vb: IQuery(Of TResponse)
  fullName.vb: NeerCore.Application.Abstractions.IQuery(Of TResponse)
  name.vb: IQuery(Of TResponse)
  spec.csharp:
  - uid: NeerCore.Application.Abstractions.IQuery`1
    name: IQuery
    nameWithType: IQuery
    fullName: NeerCore.Application.Abstractions.IQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NeerCore.Application.Abstractions.IQuery`1
    name: IQuery
    nameWithType: IQuery
    fullName: NeerCore.Application.Abstractions.IQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.Application.Abstractions.IQueryHandler`2
  commentId: T:NeerCore.Application.Abstractions.IQueryHandler`2
  name: IQueryHandler<TQuery, TResponse>
  nameWithType: IQueryHandler<TQuery, TResponse>
  fullName: NeerCore.Application.Abstractions.IQueryHandler<TQuery, TResponse>
  nameWithType.vb: IQueryHandler(Of TQuery, TResponse)
  fullName.vb: NeerCore.Application.Abstractions.IQueryHandler(Of TQuery, TResponse)
  name.vb: IQueryHandler(Of TQuery, TResponse)
  spec.csharp:
  - uid: NeerCore.Application.Abstractions.IQueryHandler`2
    name: IQueryHandler
    nameWithType: IQueryHandler
    fullName: NeerCore.Application.Abstractions.IQueryHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NeerCore.Application.Abstractions.IQueryHandler`2
    name: IQueryHandler
    nameWithType: IQueryHandler
    fullName: NeerCore.Application.Abstractions.IQueryHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
