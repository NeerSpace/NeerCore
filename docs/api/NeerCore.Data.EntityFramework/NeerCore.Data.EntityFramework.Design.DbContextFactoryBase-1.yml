### YamlMime:ManagedReference
items:
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1
  commentId: T:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1
  id: DbContextFactoryBase`1
  parent: NeerCore.Data.EntityFramework.Design
  children:
  - NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConfigureContextOptions(DbContextOptionsBuilder)
  - NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConnectionString
  - NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConnectionStringsSectionPath
  - NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateContextOptions
  - NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateDbContext
  - NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateDbContext(System.String[])
  - NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.GetConnectionStringsFromJson(System.String)
  - NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.LogWriter
  - NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.MigrationsAssembly
  - NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.SelectedConnectionName
  - NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.SettingsPath
  langs:
  - csharp
  - vb
  name: DbContextFactoryBase<TContext>
  nameWithType: DbContextFactoryBase<TContext>
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>
  type: Class
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: DbContextFactoryBase
    path: ../src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
    startLine: 15
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nA factory for creating derived <see cref=\"!:DbContext\"></see> instances.\n"
  remarks: "\nSee Implementation of database providers and extensions\n<a href=\"https://aka.ms/efcore-docs-providers\">official documentation</a>\nfor more information.\n"
  example: []
  syntax:
    content: 'public abstract class DbContextFactoryBase<TContext> : IDesignTimeDbContextFactory<TContext> where TContext : DbContext'
    typeParameters:
    - id: TContext
    content.vb: >-
      Public MustInherit Class DbContextFactoryBase(Of TContext As DbContext)
          Inherits IDesignTimeDbContextFactory(Of TContext)
  inheritance:
  - System.Object
  nameWithType.vb: DbContextFactoryBase(Of TContext)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext)
  name.vb: DbContextFactoryBase(Of TContext)
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.LogWriter
  commentId: P:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.LogWriter
  id: LogWriter
  parent: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1
  langs:
  - csharp
  - vb
  name: LogWriter
  nameWithType: DbContextFactoryBase<TContext>.LogWriter
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.LogWriter
  type: Property
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: LogWriter
    path: ../src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
    startLine: 24
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nEnables (true) or disables (false) an internal logging using <see cref=\"!:Log\"></see> method.\n"
  remarks: "\nYou can override <see cref=\"!:Log\"></see> method if you want to use a different logger implementation.\n"
  example: []
  syntax:
    content: public virtual TextWriter? LogWriter { get; }
    parameters: []
    return:
      type: System.Nullable{TextWriter}
    content.vb: Public Overridable ReadOnly Property LogWriter As TextWriter?
  overload: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.LogWriter*
  nameWithType.vb: DbContextFactoryBase(Of TContext).LogWriter
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).LogWriter
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.SelectedConnectionName
  commentId: P:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.SelectedConnectionName
  id: SelectedConnectionName
  parent: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1
  langs:
  - csharp
  - vb
  name: SelectedConnectionName
  nameWithType: DbContextFactoryBase<TContext>.SelectedConnectionName
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.SelectedConnectionName
  type: Property
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: SelectedConnectionName
    path: ../src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
    startLine: 29
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nConnection string name in settings file.\n"
  example: []
  syntax:
    content: public virtual string SelectedConnectionName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property SelectedConnectionName As String
  overload: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.SelectedConnectionName*
  nameWithType.vb: DbContextFactoryBase(Of TContext).SelectedConnectionName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).SelectedConnectionName
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConnectionStringsSectionPath
  commentId: P:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConnectionStringsSectionPath
  id: ConnectionStringsSectionPath
  parent: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1
  langs:
  - csharp
  - vb
  name: ConnectionStringsSectionPath
  nameWithType: DbContextFactoryBase<TContext>.ConnectionStringsSectionPath
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.ConnectionStringsSectionPath
  type: Property
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ConnectionStringsSectionPath
    path: ../src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
    startLine: 37
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nPath from the root JSON node to the selected connection string.\n"
  remarks: "\nUse &apos;:&apos; character as nesting separator.\n"
  example: []
  syntax:
    content: public virtual string ConnectionStringsSectionPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property ConnectionStringsSectionPath As String
  overload: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConnectionStringsSectionPath*
  nameWithType.vb: DbContextFactoryBase(Of TContext).ConnectionStringsSectionPath
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).ConnectionStringsSectionPath
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.SettingsPath
  commentId: P:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.SettingsPath
  id: SettingsPath
  parent: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1
  langs:
  - csharp
  - vb
  name: SettingsPath
  nameWithType: DbContextFactoryBase<TContext>.SettingsPath
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.SettingsPath
  type: Property
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: SettingsPath
    path: ../src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
    startLine: 42
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nRelative path to the json file with connection string configuration.\n"
  example: []
  syntax:
    content: public virtual string SettingsPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property SettingsPath As String
  overload: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.SettingsPath*
  nameWithType.vb: DbContextFactoryBase(Of TContext).SettingsPath
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).SettingsPath
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConnectionString
  commentId: P:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConnectionString
  id: ConnectionString
  parent: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: DbContextFactoryBase<TContext>.ConnectionString
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.ConnectionString
  type: Property
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ConnectionString
    path: ../src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
    startLine: 47
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nConnection string used for <see cref=\"!:TContext\"></see>.\n"
  example: []
  syntax:
    content: public virtual string ConnectionString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property ConnectionString As String
  overload: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConnectionString*
  nameWithType.vb: DbContextFactoryBase(Of TContext).ConnectionString
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).ConnectionString
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.MigrationsAssembly
  commentId: P:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.MigrationsAssembly
  id: MigrationsAssembly
  parent: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1
  langs:
  - csharp
  - vb
  name: MigrationsAssembly
  nameWithType: DbContextFactoryBase<TContext>.MigrationsAssembly
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.MigrationsAssembly
  type: Property
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: MigrationsAssembly
    path: ../src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
    startLine: 60
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nPath to the assembly with migrations.\n"
  example: []
  syntax:
    content: public virtual string MigrationsAssembly { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property MigrationsAssembly As String
  overload: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.MigrationsAssembly*
  nameWithType.vb: DbContextFactoryBase(Of TContext).MigrationsAssembly
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).MigrationsAssembly
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateDbContext(System.String[])
  commentId: M:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateDbContext(System.String[])
  id: CreateDbContext(System.String[])
  parent: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1
  langs:
  - csharp
  - vb
  name: CreateDbContext(String[])
  nameWithType: DbContextFactoryBase<TContext>.CreateDbContext(String[])
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.CreateDbContext(System.String[])
  type: Method
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: CreateDbContext
    path: ../src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
    startLine: 67
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nCreates a new instance of a derived context.\n"
  example: []
  syntax:
    content: public abstract TContext CreateDbContext(string[] args)
    parameters:
    - id: args
      type: System.String[]
      description: Arguments provided by the design-time service.
    return:
      type: '{TContext}'
      description: An instance of db context.
    content.vb: Public MustOverride Function CreateDbContext(args As String()) As TContext
  overload: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateDbContext*
  nameWithType.vb: DbContextFactoryBase(Of TContext).CreateDbContext(String())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).CreateDbContext(System.String())
  name.vb: CreateDbContext(String())
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateDbContext
  commentId: M:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateDbContext
  id: CreateDbContext
  parent: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1
  langs:
  - csharp
  - vb
  name: CreateDbContext()
  nameWithType: DbContextFactoryBase<TContext>.CreateDbContext()
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.CreateDbContext()
  type: Method
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: CreateDbContext
    path: ../src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
    startLine: 69
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  syntax:
    content: public virtual TContext CreateDbContext()
    return:
      type: '{TContext}'
    content.vb: Public Overridable Function CreateDbContext As TContext
  overload: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateDbContext*
  nameWithType.vb: DbContextFactoryBase(Of TContext).CreateDbContext()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).CreateDbContext()
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConfigureContextOptions(DbContextOptionsBuilder)
  commentId: M:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConfigureContextOptions(DbContextOptionsBuilder)
  id: ConfigureContextOptions(DbContextOptionsBuilder)
  parent: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1
  langs:
  - csharp
  - vb
  name: ConfigureContextOptions(DbContextOptionsBuilder)
  nameWithType: DbContextFactoryBase<TContext>.ConfigureContextOptions(DbContextOptionsBuilder)
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.ConfigureContextOptions(DbContextOptionsBuilder)
  type: Method
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ConfigureContextOptions
    path: ../src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
    startLine: 74
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nConfigures DbContext options.\n"
  example: []
  syntax:
    content: public abstract void ConfigureContextOptions(DbContextOptionsBuilder optionsBuilder)
    parameters:
    - id: optionsBuilder
      type: DbContextOptionsBuilder
    content.vb: Public MustOverride Sub ConfigureContextOptions(optionsBuilder As DbContextOptionsBuilder)
  overload: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConfigureContextOptions*
  nameWithType.vb: DbContextFactoryBase(Of TContext).ConfigureContextOptions(DbContextOptionsBuilder)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).ConfigureContextOptions(DbContextOptionsBuilder)
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateContextOptions
  commentId: M:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateContextOptions
  id: CreateContextOptions
  parent: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1
  langs:
  - csharp
  - vb
  name: CreateContextOptions()
  nameWithType: DbContextFactoryBase<TContext>.CreateContextOptions()
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.CreateContextOptions()
  type: Method
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: CreateContextOptions
    path: ../src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
    startLine: 79
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nCreates DbContext options.\n"
  example: []
  syntax:
    content: public virtual DbContextOptions<TContext> CreateContextOptions()
    return:
      type: DbContextOptions{{TContext}}
    content.vb: Public Overridable Function CreateContextOptions As DbContextOptions(Of TContext)
  overload: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateContextOptions*
  nameWithType.vb: DbContextFactoryBase(Of TContext).CreateContextOptions()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).CreateContextOptions()
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.GetConnectionStringsFromJson(System.String)
  commentId: M:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.GetConnectionStringsFromJson(System.String)
  id: GetConnectionStringsFromJson(System.String)
  parent: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1
  langs:
  - csharp
  - vb
  name: GetConnectionStringsFromJson(String)
  nameWithType: DbContextFactoryBase<TContext>.GetConnectionStringsFromJson(String)
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.GetConnectionStringsFromJson(System.String)
  type: Method
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: GetConnectionStringsFromJson
    path: ../src/NeerCore.Data.EntityFramework/Design/DbContextFactoryBase.cs
    startLine: 98
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nGets a dictionary of connection strings.\n"
  example: []
  syntax:
    content: protected virtual IReadOnlyDictionary<string, string> GetConnectionStringsFromJson(string appsettingsPath = "appsettings.json")
    parameters:
    - id: appsettingsPath
      type: System.String
      description: Relative path to the json file with connection string configuration.
    return:
      type: IReadOnlyDictionary{System.String,System.String}
      description: Dictionary of all available connection strings.
    content.vb: Protected Overridable Function GetConnectionStringsFromJson(appsettingsPath As String = "appsettings.json") As IReadOnlyDictionary(Of String, String)
  overload: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.GetConnectionStringsFromJson*
  nameWithType.vb: DbContextFactoryBase(Of TContext).GetConnectionStringsFromJson(String)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).GetConnectionStringsFromJson(System.String)
references:
- uid: NeerCore.Data.EntityFramework.Design
  commentId: N:NeerCore.Data.EntityFramework.Design
  name: NeerCore.Data.EntityFramework.Design
  nameWithType: NeerCore.Data.EntityFramework.Design
  fullName: NeerCore.Data.EntityFramework.Design
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.LogWriter*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.LogWriter
  name: LogWriter
  nameWithType: DbContextFactoryBase<TContext>.LogWriter
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.LogWriter
  nameWithType.vb: DbContextFactoryBase(Of TContext).LogWriter
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).LogWriter
- uid: System.Nullable{TextWriter}
  commentId: '!:System.Nullable{TextWriter}'
  definition: System.Nullable`1
  name: Nullable<TextWriter>
  nameWithType: Nullable<TextWriter>
  fullName: System.Nullable<TextWriter>
  nameWithType.vb: Nullable(Of TextWriter)
  fullName.vb: System.Nullable(Of TextWriter)
  name.vb: Nullable(Of TextWriter)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: TextWriter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.SelectedConnectionName*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.SelectedConnectionName
  name: SelectedConnectionName
  nameWithType: DbContextFactoryBase<TContext>.SelectedConnectionName
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.SelectedConnectionName
  nameWithType.vb: DbContextFactoryBase(Of TContext).SelectedConnectionName
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).SelectedConnectionName
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConnectionStringsSectionPath*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConnectionStringsSectionPath
  name: ConnectionStringsSectionPath
  nameWithType: DbContextFactoryBase<TContext>.ConnectionStringsSectionPath
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.ConnectionStringsSectionPath
  nameWithType.vb: DbContextFactoryBase(Of TContext).ConnectionStringsSectionPath
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).ConnectionStringsSectionPath
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.SettingsPath*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.SettingsPath
  name: SettingsPath
  nameWithType: DbContextFactoryBase<TContext>.SettingsPath
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.SettingsPath
  nameWithType.vb: DbContextFactoryBase(Of TContext).SettingsPath
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).SettingsPath
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConnectionString*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConnectionString
  name: ConnectionString
  nameWithType: DbContextFactoryBase<TContext>.ConnectionString
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.ConnectionString
  nameWithType.vb: DbContextFactoryBase(Of TContext).ConnectionString
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).ConnectionString
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.MigrationsAssembly*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.MigrationsAssembly
  name: MigrationsAssembly
  nameWithType: DbContextFactoryBase<TContext>.MigrationsAssembly
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.MigrationsAssembly
  nameWithType.vb: DbContextFactoryBase(Of TContext).MigrationsAssembly
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).MigrationsAssembly
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateDbContext*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateDbContext
  name: CreateDbContext
  nameWithType: DbContextFactoryBase<TContext>.CreateDbContext
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.CreateDbContext
  nameWithType.vb: DbContextFactoryBase(Of TContext).CreateDbContext
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).CreateDbContext
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: '{TContext}'
  commentId: '!:TContext'
  definition: TContext
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: TContext
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConfigureContextOptions*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConfigureContextOptions
  name: ConfigureContextOptions
  nameWithType: DbContextFactoryBase<TContext>.ConfigureContextOptions
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.ConfigureContextOptions
  nameWithType.vb: DbContextFactoryBase(Of TContext).ConfigureContextOptions
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).ConfigureContextOptions
- uid: DbContextOptionsBuilder
  commentId: '!:DbContextOptionsBuilder'
  isExternal: true
  name: DbContextOptionsBuilder
  nameWithType: DbContextOptionsBuilder
  fullName: DbContextOptionsBuilder
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateContextOptions*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.CreateContextOptions
  name: CreateContextOptions
  nameWithType: DbContextFactoryBase<TContext>.CreateContextOptions
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.CreateContextOptions
  nameWithType.vb: DbContextFactoryBase(Of TContext).CreateContextOptions
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).CreateContextOptions
- uid: DbContextOptions{{TContext}}
  commentId: '!:DbContextOptions{`0}'
  definition: DbContextOptions`1
  name: DbContextOptions<TContext>
  nameWithType: DbContextOptions<TContext>
  fullName: DbContextOptions<TContext>
  nameWithType.vb: DbContextOptions(Of TContext)
  fullName.vb: DbContextOptions(Of TContext)
  name.vb: DbContextOptions(Of TContext)
  spec.csharp:
  - uid: DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: DbContextOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: DbContextOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
- uid: DbContextOptions`1
  commentId: '!:DbContextOptions`1'
  isExternal: true
  name: DbContextOptions<>
  nameWithType: DbContextOptions<>
  fullName: DbContextOptions<>
  nameWithType.vb: DbContextOptions(Of )
  fullName.vb: DbContextOptions(Of )
  name.vb: DbContextOptions(Of )
  spec.csharp:
  - uid: DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: DbContextOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: DbContextOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.SelectedConnectionName
  commentId: P:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.SelectedConnectionName
  isExternal: true
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConnectionStringsSectionPath
  commentId: P:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.ConnectionStringsSectionPath
  isExternal: true
- uid: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.GetConnectionStringsFromJson*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbContextFactoryBase`1.GetConnectionStringsFromJson
  name: GetConnectionStringsFromJson
  nameWithType: DbContextFactoryBase<TContext>.GetConnectionStringsFromJson
  fullName: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase<TContext>.GetConnectionStringsFromJson
  nameWithType.vb: DbContextFactoryBase(Of TContext).GetConnectionStringsFromJson
  fullName.vb: NeerCore.Data.EntityFramework.Design.DbContextFactoryBase(Of TContext).GetConnectionStringsFromJson
- uid: IReadOnlyDictionary{System.String,System.String}
  commentId: '!:IReadOnlyDictionary{System.String,System.String}'
  definition: IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, String>
  nameWithType: IReadOnlyDictionary<String, String>
  fullName: IReadOnlyDictionary<System.String, System.String>
  nameWithType.vb: IReadOnlyDictionary(Of String, String)
  fullName.vb: IReadOnlyDictionary(Of System.String, System.String)
  name.vb: IReadOnlyDictionary(Of String, String)
  spec.csharp:
  - uid: IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IReadOnlyDictionary`2
  commentId: '!:IReadOnlyDictionary`2'
  isExternal: true
  name: IReadOnlyDictionary<, >
  nameWithType: IReadOnlyDictionary<, >
  fullName: IReadOnlyDictionary<, >
  nameWithType.vb: IReadOnlyDictionary(Of , )
  fullName.vb: IReadOnlyDictionary(Of , )
  name.vb: IReadOnlyDictionary(Of , )
  spec.csharp:
  - uid: IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
