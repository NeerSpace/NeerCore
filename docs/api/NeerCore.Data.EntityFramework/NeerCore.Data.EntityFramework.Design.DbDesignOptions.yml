### YamlMime:ManagedReference
items:
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions
  commentId: T:NeerCore.Data.EntityFramework.Design.DbDesignOptions
  id: DbDesignOptions
  parent: NeerCore.Data.EntityFramework.Design
  children:
  - NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyDataSeeders
  - NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyEntityTypeConfigurations
  - NeerCore.Data.EntityFramework.Design.DbDesignOptions.DataAssemblies
  - NeerCore.Data.EntityFramework.Design.DbDesignOptions.DateTimeKind
  - NeerCore.Data.EntityFramework.Design.DbDesignOptions.EngineStrategy
  - NeerCore.Data.EntityFramework.Design.DbDesignOptions.PreferSqlSideDefaultValues
  - NeerCore.Data.EntityFramework.Design.DbDesignOptions.SequentialGuids
  langs:
  - csharp
  - vb
  name: DbDesignOptions
  nameWithType: DbDesignOptions
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions
  type: Class
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: DbDesignOptions
    path: ../src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
    startLine: 9
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nDefines an options to configure entity models registration and configuring.\n"
  example: []
  syntax:
    content: 'public class DbDesignOptions : object'
    content.vb: >-
      Public Class DbDesignOptions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions.EngineStrategy
  commentId: P:NeerCore.Data.EntityFramework.Design.DbDesignOptions.EngineStrategy
  id: EngineStrategy
  parent: NeerCore.Data.EntityFramework.Design.DbDesignOptions
  langs:
  - csharp
  - vb
  name: EngineStrategy
  nameWithType: DbDesignOptions.EngineStrategy
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions.EngineStrategy
  type: Property
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: EngineStrategy
    path: ../src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
    startLine: 15
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nGets or sets DB Engine strategy used for models configuring.\n"
  remarks: 'Default: <strong>SqlServer</strong>'
  example: []
  syntax:
    content: public DbEngineStrategy EngineStrategy { get; set; }
    parameters: []
    return:
      type: NeerCore.Data.EntityFramework.Design.DbEngineStrategy
    content.vb: Public Property EngineStrategy As DbEngineStrategy
  overload: NeerCore.Data.EntityFramework.Design.DbDesignOptions.EngineStrategy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions.PreferSqlSideDefaultValues
  commentId: P:NeerCore.Data.EntityFramework.Design.DbDesignOptions.PreferSqlSideDefaultValues
  id: PreferSqlSideDefaultValues
  parent: NeerCore.Data.EntityFramework.Design.DbDesignOptions
  langs:
  - csharp
  - vb
  name: PreferSqlSideDefaultValues
  nameWithType: DbDesignOptions.PreferSqlSideDefaultValues
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions.PreferSqlSideDefaultValues
  type: Property
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: PreferSqlSideDefaultValues
    path: ../src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
    startLine: 21
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nIf <strong>true</strong>, whenever possible, it is preferable to generate the value on\nthe database side, otherwise it is preferable to generate on the code side. \n"
  example: []
  syntax:
    content: public bool PreferSqlSideDefaultValues { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PreferSqlSideDefaultValues As Boolean
  overload: NeerCore.Data.EntityFramework.Design.DbDesignOptions.PreferSqlSideDefaultValues*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions.SequentialGuids
  commentId: P:NeerCore.Data.EntityFramework.Design.DbDesignOptions.SequentialGuids
  id: SequentialGuids
  parent: NeerCore.Data.EntityFramework.Design.DbDesignOptions
  langs:
  - csharp
  - vb
  name: SequentialGuids
  nameWithType: DbDesignOptions.SequentialGuids
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions.SequentialGuids
  type: Property
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: SequentialGuids
    path: ../src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
    startLine: 28
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nGets or sets value that enables (<strong>true</strong>) or disables\n(<strong>false</strong>) sequential GUID generation instead of default.\n"
  remarks: 'Default: <strong>false</strong>'
  example: []
  syntax:
    content: public bool SequentialGuids { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SequentialGuids As Boolean
  overload: NeerCore.Data.EntityFramework.Design.DbDesignOptions.SequentialGuids*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions.DateTimeKind
  commentId: P:NeerCore.Data.EntityFramework.Design.DbDesignOptions.DateTimeKind
  id: DateTimeKind
  parent: NeerCore.Data.EntityFramework.Design.DbDesignOptions
  langs:
  - csharp
  - vb
  name: DateTimeKind
  nameWithType: DbDesignOptions.DateTimeKind
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions.DateTimeKind
  type: Property
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: DateTimeKind
    path: ../src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
    startLine: 35
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nSpecifies whether a <see cref=\"!:DateTime\"></see> object represents a local time,\na Coordinated Universal Time (UTC), or is not specified as either local time or UTC.\n"
  remarks: 'Default: <strong>Local</strong>'
  example: []
  syntax:
    content: public DateTimeKind DateTimeKind { get; set; }
    parameters: []
    return:
      type: DateTimeKind
    content.vb: Public Property DateTimeKind As DateTimeKind
  overload: NeerCore.Data.EntityFramework.Design.DbDesignOptions.DateTimeKind*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyEntityTypeConfigurations
  commentId: P:NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyEntityTypeConfigurations
  id: ApplyEntityTypeConfigurations
  parent: NeerCore.Data.EntityFramework.Design.DbDesignOptions
  langs:
  - csharp
  - vb
  name: ApplyEntityTypeConfigurations
  nameWithType: DbDesignOptions.ApplyEntityTypeConfigurations
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyEntityTypeConfigurations
  type: Property
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ApplyEntityTypeConfigurations
    path: ../src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
    startLine: 42
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nGets or sets value that enables (<strong>true</strong>) or disables\n(<strong>false</strong>) entities configuring with <see cref=\"!:IEntityTypeConfiguration&lt;TEntity>\"></see> interface.\n"
  remarks: 'Default: <strong>true</strong>'
  example: []
  syntax:
    content: public bool ApplyEntityTypeConfigurations { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ApplyEntityTypeConfigurations As Boolean
  overload: NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyEntityTypeConfigurations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyDataSeeders
  commentId: P:NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyDataSeeders
  id: ApplyDataSeeders
  parent: NeerCore.Data.EntityFramework.Design.DbDesignOptions
  langs:
  - csharp
  - vb
  name: ApplyDataSeeders
  nameWithType: DbDesignOptions.ApplyDataSeeders
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyDataSeeders
  type: Property
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ApplyDataSeeders
    path: ../src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
    startLine: 50
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\nGets or sets value that enables (<strong>true</strong>) or disables\n(<strong>false</strong>) NeerCore data seeding with <xref href=\"NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder%601\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"NeerCore.Data.EntityFramework.Abstractions.IDataSeeder\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  remarks: 'Default: <strong>true</strong>'
  example: []
  syntax:
    content: public bool ApplyDataSeeders { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ApplyDataSeeders As Boolean
  overload: NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyDataSeeders*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions.DataAssemblies
  commentId: P:NeerCore.Data.EntityFramework.Design.DbDesignOptions.DataAssemblies
  id: DataAssemblies
  parent: NeerCore.Data.EntityFramework.Design.DbDesignOptions
  langs:
  - csharp
  - vb
  name: DataAssemblies
  nameWithType: DbDesignOptions.DataAssemblies
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions.DataAssemblies
  type: Property
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: DataAssemblies
    path: ../src/NeerCore.Data.EntityFramework/Design/DbDesignOptions.cs
    startLine: 55
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Design
  summary: "\n\n"
  example: []
  syntax:
    content: public Assembly? [] DataAssemblies { get; set; }
    parameters: []
    return:
      type: System.Nullable{Assembly}[]
    content.vb: Public Property DataAssemblies As Assembly?()
  overload: NeerCore.Data.EntityFramework.Design.DbDesignOptions.DataAssemblies*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: NeerCore.Data.EntityFramework.Design
  commentId: N:NeerCore.Data.EntityFramework.Design
  name: NeerCore.Data.EntityFramework.Design
  nameWithType: NeerCore.Data.EntityFramework.Design
  fullName: NeerCore.Data.EntityFramework.Design
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions.EngineStrategy*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbDesignOptions.EngineStrategy
  name: EngineStrategy
  nameWithType: DbDesignOptions.EngineStrategy
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions.EngineStrategy
- uid: NeerCore.Data.EntityFramework.Design.DbEngineStrategy
  commentId: T:NeerCore.Data.EntityFramework.Design.DbEngineStrategy
  parent: NeerCore.Data.EntityFramework.Design
  name: DbEngineStrategy
  nameWithType: DbEngineStrategy
  fullName: NeerCore.Data.EntityFramework.Design.DbEngineStrategy
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions.PreferSqlSideDefaultValues*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbDesignOptions.PreferSqlSideDefaultValues
  name: PreferSqlSideDefaultValues
  nameWithType: DbDesignOptions.PreferSqlSideDefaultValues
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions.PreferSqlSideDefaultValues
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions.SequentialGuids*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbDesignOptions.SequentialGuids
  name: SequentialGuids
  nameWithType: DbDesignOptions.SequentialGuids
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions.SequentialGuids
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions.DateTimeKind*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbDesignOptions.DateTimeKind
  name: DateTimeKind
  nameWithType: DbDesignOptions.DateTimeKind
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions.DateTimeKind
- uid: DateTimeKind
  commentId: '!:DateTimeKind'
  isExternal: true
  name: DateTimeKind
  nameWithType: DateTimeKind
  fullName: DateTimeKind
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyEntityTypeConfigurations*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyEntityTypeConfigurations
  name: ApplyEntityTypeConfigurations
  nameWithType: DbDesignOptions.ApplyEntityTypeConfigurations
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyEntityTypeConfigurations
- uid: NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder`1
  commentId: T:NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder`1
  name: IEntityDataSeeder<TEntity>
  nameWithType: IEntityDataSeeder<TEntity>
  fullName: NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder<TEntity>
  nameWithType.vb: IEntityDataSeeder(Of TEntity)
  fullName.vb: NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder(Of TEntity)
  name.vb: IEntityDataSeeder(Of TEntity)
  spec.csharp:
  - uid: NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder`1
    name: IEntityDataSeeder
    nameWithType: IEntityDataSeeder
    fullName: NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder`1
    name: IEntityDataSeeder
    nameWithType: IEntityDataSeeder
    fullName: NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.Data.EntityFramework.Abstractions.IDataSeeder
  commentId: T:NeerCore.Data.EntityFramework.Abstractions.IDataSeeder
  name: IDataSeeder
  nameWithType: IDataSeeder
  fullName: NeerCore.Data.EntityFramework.Abstractions.IDataSeeder
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyDataSeeders*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyDataSeeders
  name: ApplyDataSeeders
  nameWithType: DbDesignOptions.ApplyDataSeeders
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions.ApplyDataSeeders
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions.DataAssemblies*
  commentId: Overload:NeerCore.Data.EntityFramework.Design.DbDesignOptions.DataAssemblies
  name: DataAssemblies
  nameWithType: DbDesignOptions.DataAssemblies
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions.DataAssemblies
- uid: System.Nullable{Assembly}[]
  isExternal: true
  name: Nullable<Assembly>[]
  nameWithType: Nullable<Assembly>[]
  fullName: System.Nullable<Assembly>[]
  nameWithType.vb: Nullable(Of Assembly)()
  fullName.vb: System.Nullable(Of Assembly)()
  name.vb: Nullable(Of Assembly)()
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
