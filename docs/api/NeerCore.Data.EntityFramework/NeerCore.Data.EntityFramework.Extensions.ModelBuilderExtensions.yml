### YamlMime:ManagedReference
items:
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions
  commentId: T:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions
  id: ModelBuilderExtensions
  parent: NeerCore.Data.EntityFramework.Extensions
  children:
  - NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddAllEntities(ModelBuilder,System.Nullable{Assembly})
  - NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddLocalizedStrings(ModelBuilder,System.Nullable{Assembly})
  - NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllConfigurations(ModelBuilder)
  - NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllDataSeeders(ModelBuilder)
  - NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyDataSeedersFromAssembly(ModelBuilder,Assembly)
  - NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyDataSeedersFromAssembly(ModelBuilder,System.String)
  - NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityDating(ModelBuilder,System.Nullable{Action{NeerCore.Data.EntityFramework.Design.DbDesignOptions}})
  - NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityIds(ModelBuilder,NeerCore.Data.EntityFramework.Design.DbDesignOptions)
  - NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ConfigureEntities(ModelBuilder,System.Nullable{Action{NeerCore.Data.EntityFramework.Design.DbDesignOptions}})
  - NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.GetAllEntities(ModelBuilder,System.Nullable{Assembly})
  langs:
  - csharp
  - vb
  name: ModelBuilderExtensions
  nameWithType: ModelBuilderExtensions
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions
  type: Class
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ModelBuilderExtensions
    path: ../src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
    startLine: 13
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Extensions
  syntax:
    content: 'public static class ModelBuilderExtensions : object'
    content.vb: >-
      Public Module ModelBuilderExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ConfigureEntities(ModelBuilder,System.Nullable{Action{NeerCore.Data.EntityFramework.Design.DbDesignOptions}})
  commentId: M:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ConfigureEntities(ModelBuilder,System.Nullable{Action{NeerCore.Data.EntityFramework.Design.DbDesignOptions}})
  id: ConfigureEntities(ModelBuilder,System.Nullable{Action{NeerCore.Data.EntityFramework.Design.DbDesignOptions}})
  isExtensionMethod: true
  parent: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions
  langs:
  - csharp
  - vb
  name: ConfigureEntities(ModelBuilder, Nullable<Action<DbDesignOptions>>)
  nameWithType: ModelBuilderExtensions.ConfigureEntities(ModelBuilder, Nullable<Action<DbDesignOptions>>)
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ConfigureEntities(ModelBuilder, System.Nullable<Action<NeerCore.Data.EntityFramework.Design.DbDesignOptions>>)
  type: Method
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ConfigureEntities
    path: ../src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
    startLine: 20
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Extensions
  summary: "\n\n"
  example: []
  syntax:
    content: public static ModelBuilder ConfigureEntities(this ModelBuilder builder, Action<DbDesignOptions>? configureOptions = null)
    parameters:
    - id: builder
      type: ModelBuilder
      description: ''
    - id: configureOptions
      type: System.Nullable{Action{NeerCore.Data.EntityFramework.Design.DbDesignOptions}}
      description: ''
    return:
      type: ModelBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConfigureEntities(builder As ModelBuilder, configureOptions As Action(Of DbDesignOptions)? = Nothing) As ModelBuilder
  overload: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ConfigureEntities*
  nameWithType.vb: ModelBuilderExtensions.ConfigureEntities(ModelBuilder, Nullable(Of Action(Of DbDesignOptions)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ConfigureEntities(ModelBuilder, System.Nullable(Of Action(Of NeerCore.Data.EntityFramework.Design.DbDesignOptions)))
  name.vb: ConfigureEntities(ModelBuilder, Nullable(Of Action(Of DbDesignOptions)))
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityIds(ModelBuilder,NeerCore.Data.EntityFramework.Design.DbDesignOptions)
  commentId: M:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityIds(ModelBuilder,NeerCore.Data.EntityFramework.Design.DbDesignOptions)
  id: ApplyEntityIds(ModelBuilder,NeerCore.Data.EntityFramework.Design.DbDesignOptions)
  isExtensionMethod: true
  parent: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions
  langs:
  - csharp
  - vb
  name: ApplyEntityIds(ModelBuilder, DbDesignOptions)
  nameWithType: ModelBuilderExtensions.ApplyEntityIds(ModelBuilder, DbDesignOptions)
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityIds(ModelBuilder, NeerCore.Data.EntityFramework.Design.DbDesignOptions)
  type: Method
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ApplyEntityIds
    path: ../src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
    startLine: 49
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Extensions
  summary: "\n\n"
  example: []
  syntax:
    content: public static ModelBuilder ApplyEntityIds(this ModelBuilder builder, DbDesignOptions options)
    parameters:
    - id: builder
      type: ModelBuilder
      description: ''
    - id: options
      type: NeerCore.Data.EntityFramework.Design.DbDesignOptions
      description: ''
    return:
      type: ModelBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ApplyEntityIds(builder As ModelBuilder, options As DbDesignOptions) As ModelBuilder
  overload: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityIds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.GetAllEntities(ModelBuilder,System.Nullable{Assembly})
  commentId: M:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.GetAllEntities(ModelBuilder,System.Nullable{Assembly})
  id: GetAllEntities(ModelBuilder,System.Nullable{Assembly})
  isExtensionMethod: true
  parent: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetAllEntities(ModelBuilder, Nullable<Assembly>)
  nameWithType: ModelBuilderExtensions.GetAllEntities(ModelBuilder, Nullable<Assembly>)
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.GetAllEntities(ModelBuilder, System.Nullable<Assembly>)
  type: Method
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: GetAllEntities
    path: ../src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
    startLine: 77
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Extensions
  syntax:
    content: public static IEnumerable<EntityTypeBuilder> GetAllEntities(this ModelBuilder builder, Assembly? assembly = null)
    parameters:
    - id: builder
      type: ModelBuilder
    - id: assembly
      type: System.Nullable{Assembly}
    return:
      type: IEnumerable{EntityTypeBuilder}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAllEntities(builder As ModelBuilder, assembly As Assembly? = Nothing) As IEnumerable(Of EntityTypeBuilder)
  overload: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.GetAllEntities*
  nameWithType.vb: ModelBuilderExtensions.GetAllEntities(ModelBuilder, Nullable(Of Assembly))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.GetAllEntities(ModelBuilder, System.Nullable(Of Assembly))
  name.vb: GetAllEntities(ModelBuilder, Nullable(Of Assembly))
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddAllEntities(ModelBuilder,System.Nullable{Assembly})
  commentId: M:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddAllEntities(ModelBuilder,System.Nullable{Assembly})
  id: AddAllEntities(ModelBuilder,System.Nullable{Assembly})
  isExtensionMethod: true
  parent: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddAllEntities(ModelBuilder, Nullable<Assembly>)
  nameWithType: ModelBuilderExtensions.AddAllEntities(ModelBuilder, Nullable<Assembly>)
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddAllEntities(ModelBuilder, System.Nullable<Assembly>)
  type: Method
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: AddAllEntities
    path: ../src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
    startLine: 91
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Extensions
  summary: "\n\n"
  example: []
  syntax:
    content: public static ModelBuilder AddAllEntities(this ModelBuilder builder, Assembly? assembly = null)
    parameters:
    - id: builder
      type: ModelBuilder
      description: ''
    - id: assembly
      type: System.Nullable{Assembly}
      description: ''
    return:
      type: ModelBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAllEntities(builder As ModelBuilder, assembly As Assembly? = Nothing) As ModelBuilder
  overload: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddAllEntities*
  nameWithType.vb: ModelBuilderExtensions.AddAllEntities(ModelBuilder, Nullable(Of Assembly))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddAllEntities(ModelBuilder, System.Nullable(Of Assembly))
  name.vb: AddAllEntities(ModelBuilder, Nullable(Of Assembly))
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddLocalizedStrings(ModelBuilder,System.Nullable{Assembly})
  commentId: M:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddLocalizedStrings(ModelBuilder,System.Nullable{Assembly})
  id: AddLocalizedStrings(ModelBuilder,System.Nullable{Assembly})
  isExtensionMethod: true
  parent: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddLocalizedStrings(ModelBuilder, Nullable<Assembly>)
  nameWithType: ModelBuilderExtensions.AddLocalizedStrings(ModelBuilder, Nullable<Assembly>)
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddLocalizedStrings(ModelBuilder, System.Nullable<Assembly>)
  type: Method
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: AddLocalizedStrings
    path: ../src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
    startLine: 102
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Extensions
  summary: "\n\n"
  example: []
  syntax:
    content: public static ModelBuilder AddLocalizedStrings(this ModelBuilder builder, Assembly? assembly = null)
    parameters:
    - id: builder
      type: ModelBuilder
      description: ''
    - id: assembly
      type: System.Nullable{Assembly}
      description: ''
    return:
      type: ModelBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddLocalizedStrings(builder As ModelBuilder, assembly As Assembly? = Nothing) As ModelBuilder
  overload: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddLocalizedStrings*
  nameWithType.vb: ModelBuilderExtensions.AddLocalizedStrings(ModelBuilder, Nullable(Of Assembly))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddLocalizedStrings(ModelBuilder, System.Nullable(Of Assembly))
  name.vb: AddLocalizedStrings(ModelBuilder, Nullable(Of Assembly))
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityDating(ModelBuilder,System.Nullable{Action{NeerCore.Data.EntityFramework.Design.DbDesignOptions}})
  commentId: M:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityDating(ModelBuilder,System.Nullable{Action{NeerCore.Data.EntityFramework.Design.DbDesignOptions}})
  id: ApplyEntityDating(ModelBuilder,System.Nullable{Action{NeerCore.Data.EntityFramework.Design.DbDesignOptions}})
  isExtensionMethod: true
  parent: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions
  langs:
  - csharp
  - vb
  name: ApplyEntityDating(ModelBuilder, Nullable<Action<DbDesignOptions>>)
  nameWithType: ModelBuilderExtensions.ApplyEntityDating(ModelBuilder, Nullable<Action<DbDesignOptions>>)
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityDating(ModelBuilder, System.Nullable<Action<NeerCore.Data.EntityFramework.Design.DbDesignOptions>>)
  type: Method
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ApplyEntityDating
    path: ../src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
    startLine: 130
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Extensions
  summary: "\n\n"
  example: []
  syntax:
    content: public static ModelBuilder ApplyEntityDating(this ModelBuilder builder, Action<DbDesignOptions>? configureOptions = null)
    parameters:
    - id: builder
      type: ModelBuilder
      description: ''
    - id: configureOptions
      type: System.Nullable{Action{NeerCore.Data.EntityFramework.Design.DbDesignOptions}}
      description: ''
    return:
      type: ModelBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ApplyEntityDating(builder As ModelBuilder, configureOptions As Action(Of DbDesignOptions)? = Nothing) As ModelBuilder
  overload: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityDating*
  nameWithType.vb: ModelBuilderExtensions.ApplyEntityDating(ModelBuilder, Nullable(Of Action(Of DbDesignOptions)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityDating(ModelBuilder, System.Nullable(Of Action(Of NeerCore.Data.EntityFramework.Design.DbDesignOptions)))
  name.vb: ApplyEntityDating(ModelBuilder, Nullable(Of Action(Of DbDesignOptions)))
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllConfigurations(ModelBuilder)
  commentId: M:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllConfigurations(ModelBuilder)
  id: ApplyAllConfigurations(ModelBuilder)
  isExtensionMethod: true
  parent: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions
  langs:
  - csharp
  - vb
  name: ApplyAllConfigurations(ModelBuilder)
  nameWithType: ModelBuilderExtensions.ApplyAllConfigurations(ModelBuilder)
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllConfigurations(ModelBuilder)
  type: Method
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ApplyAllConfigurations
    path: ../src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
    startLine: 178
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Extensions
  summary: "\nApplies configuration from all <see cref=\"!:IEntityTypeConfiguration&lt;TEntity>\"></see>\ninstances that are defined in provided <strong>calling assembly</strong>.\n"
  example: []
  syntax:
    content: public static ModelBuilder ApplyAllConfigurations(this ModelBuilder builder)
    parameters:
    - id: builder
      type: ModelBuilder
      description: Database model builder.
    return:
      type: ModelBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ApplyAllConfigurations(builder As ModelBuilder) As ModelBuilder
  overload: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllConfigurations*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyDataSeedersFromAssembly(ModelBuilder,System.String)
  commentId: M:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyDataSeedersFromAssembly(ModelBuilder,System.String)
  id: ApplyDataSeedersFromAssembly(ModelBuilder,System.String)
  isExtensionMethod: true
  parent: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions
  langs:
  - csharp
  - vb
  name: ApplyDataSeedersFromAssembly(ModelBuilder, String)
  nameWithType: ModelBuilderExtensions.ApplyDataSeedersFromAssembly(ModelBuilder, String)
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyDataSeedersFromAssembly(ModelBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ApplyDataSeedersFromAssembly
    path: ../src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
    startLine: 185
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Extensions
  summary: "\nApplies all <xref href=\"NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder%601\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"NeerCore.Data.EntityFramework.Abstractions.IDataSeeder\" data-throw-if-not-resolved=\"false\"></xref>\nseeding data from provided assembly or from the calling assembly by default.\n"
  example: []
  syntax:
    content: public static ModelBuilder ApplyDataSeedersFromAssembly(this ModelBuilder builder, string assemblyName)
    parameters:
    - id: builder
      type: ModelBuilder
    - id: assemblyName
      type: System.String
      description: <see cref="!:Assembly"></see> name where data seeders are providing.
    return:
      type: ModelBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ApplyDataSeedersFromAssembly(builder As ModelBuilder, assemblyName As String) As ModelBuilder
  overload: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyDataSeedersFromAssembly*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyDataSeedersFromAssembly(ModelBuilder,Assembly)
  commentId: M:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyDataSeedersFromAssembly(ModelBuilder,Assembly)
  id: ApplyDataSeedersFromAssembly(ModelBuilder,Assembly)
  isExtensionMethod: true
  parent: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions
  langs:
  - csharp
  - vb
  name: ApplyDataSeedersFromAssembly(ModelBuilder, Assembly)
  nameWithType: ModelBuilderExtensions.ApplyDataSeedersFromAssembly(ModelBuilder, Assembly)
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyDataSeedersFromAssembly(ModelBuilder, Assembly)
  type: Method
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ApplyDataSeedersFromAssembly
    path: ../src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
    startLine: 195
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Extensions
  summary: "\nApplies all <xref href=\"NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder%601\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"NeerCore.Data.EntityFramework.Abstractions.IDataSeeder\" data-throw-if-not-resolved=\"false\"></xref>\nseeding data from provided assembly or from the calling assembly by default.\n"
  example: []
  syntax:
    content: public static ModelBuilder ApplyDataSeedersFromAssembly(this ModelBuilder builder, Assembly assembly)
    parameters:
    - id: builder
      type: ModelBuilder
    - id: assembly
      type: Assembly
      description: <see cref="!:Assembly"></see> where data seeders are providing.
    return:
      type: ModelBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ApplyDataSeedersFromAssembly(builder As ModelBuilder, assembly As Assembly) As ModelBuilder
  overload: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyDataSeedersFromAssembly*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllDataSeeders(ModelBuilder)
  commentId: M:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllDataSeeders(ModelBuilder)
  id: ApplyAllDataSeeders(ModelBuilder)
  isExtensionMethod: true
  parent: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions
  langs:
  - csharp
  - vb
  name: ApplyAllDataSeeders(ModelBuilder)
  nameWithType: ModelBuilderExtensions.ApplyAllDataSeeders(ModelBuilder)
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllDataSeeders(ModelBuilder)
  type: Method
  source:
    remote:
      path: src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ApplyAllDataSeeders
    path: ../src/NeerCore.Data.EntityFramework/Extensions/ModelBuilderExtensions.cs
    startLine: 207
  assemblies:
  - NeerCore.Data.EntityFramework
  namespace: NeerCore.Data.EntityFramework.Extensions
  summary: "\nApplies all <xref href=\"NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder%601\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"NeerCore.Data.EntityFramework.Abstractions.IDataSeeder\" data-throw-if-not-resolved=\"false\"></xref>\nseeding data from provided assembly or from the calling assembly by default.\n"
  example: []
  syntax:
    content: public static ModelBuilder ApplyAllDataSeeders(this ModelBuilder builder)
    parameters:
    - id: builder
      type: ModelBuilder
      description: Database model builder.
    return:
      type: ModelBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ApplyAllDataSeeders(builder As ModelBuilder) As ModelBuilder
  overload: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllDataSeeders*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: NeerCore.Data.EntityFramework.Extensions
  commentId: N:NeerCore.Data.EntityFramework.Extensions
  name: NeerCore.Data.EntityFramework.Extensions
  nameWithType: NeerCore.Data.EntityFramework.Extensions
  fullName: NeerCore.Data.EntityFramework.Extensions
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ConfigureEntities*
  commentId: Overload:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ConfigureEntities
  name: ConfigureEntities
  nameWithType: ModelBuilderExtensions.ConfigureEntities
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ConfigureEntities
- uid: ModelBuilder
  isExternal: true
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: ModelBuilder
- uid: System.Nullable{Action{NeerCore.Data.EntityFramework.Design.DbDesignOptions}}
  commentId: '!:System.Nullable{Action{NeerCore.Data.EntityFramework.Design.DbDesignOptions}}'
  definition: System.Nullable`1
  name: Nullable<Action<DbDesignOptions>>
  nameWithType: Nullable<Action<DbDesignOptions>>
  fullName: System.Nullable<Action<NeerCore.Data.EntityFramework.Design.DbDesignOptions>>
  nameWithType.vb: Nullable(Of Action(Of DbDesignOptions))
  fullName.vb: System.Nullable(Of Action(Of NeerCore.Data.EntityFramework.Design.DbDesignOptions))
  name.vb: Nullable(Of Action(Of DbDesignOptions))
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions
    name: DbDesignOptions
    nameWithType: DbDesignOptions
    fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions
    name: DbDesignOptions
    nameWithType: DbDesignOptions
    fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityIds*
  commentId: Overload:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityIds
  name: ApplyEntityIds
  nameWithType: ModelBuilderExtensions.ApplyEntityIds
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityIds
- uid: NeerCore.Data.EntityFramework.Design.DbDesignOptions
  commentId: T:NeerCore.Data.EntityFramework.Design.DbDesignOptions
  parent: NeerCore.Data.EntityFramework.Design
  name: DbDesignOptions
  nameWithType: DbDesignOptions
  fullName: NeerCore.Data.EntityFramework.Design.DbDesignOptions
- uid: NeerCore.Data.EntityFramework.Design
  commentId: N:NeerCore.Data.EntityFramework.Design
  name: NeerCore.Data.EntityFramework.Design
  nameWithType: NeerCore.Data.EntityFramework.Design
  fullName: NeerCore.Data.EntityFramework.Design
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.GetAllEntities*
  commentId: Overload:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.GetAllEntities
  name: GetAllEntities
  nameWithType: ModelBuilderExtensions.GetAllEntities
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.GetAllEntities
- uid: System.Nullable{Assembly}
  commentId: '!:System.Nullable{Assembly}'
  definition: System.Nullable`1
  name: Nullable<Assembly>
  nameWithType: Nullable<Assembly>
  fullName: System.Nullable<Assembly>
  nameWithType.vb: Nullable(Of Assembly)
  fullName.vb: System.Nullable(Of Assembly)
  name.vb: Nullable(Of Assembly)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable{EntityTypeBuilder}
  commentId: '!:IEnumerable{EntityTypeBuilder}'
  definition: IEnumerable`1
  name: IEnumerable<EntityTypeBuilder>
  nameWithType: IEnumerable<EntityTypeBuilder>
  fullName: IEnumerable<EntityTypeBuilder>
  nameWithType.vb: IEnumerable(Of EntityTypeBuilder)
  fullName.vb: IEnumerable(Of EntityTypeBuilder)
  name.vb: IEnumerable(Of EntityTypeBuilder)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EntityTypeBuilder
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddAllEntities*
  commentId: Overload:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddAllEntities
  name: AddAllEntities
  nameWithType: ModelBuilderExtensions.AddAllEntities
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddAllEntities
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddLocalizedStrings*
  commentId: Overload:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddLocalizedStrings
  name: AddLocalizedStrings
  nameWithType: ModelBuilderExtensions.AddLocalizedStrings
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.AddLocalizedStrings
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityDating*
  commentId: Overload:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityDating
  name: ApplyEntityDating
  nameWithType: ModelBuilderExtensions.ApplyEntityDating
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyEntityDating
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllConfigurations*
  commentId: Overload:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllConfigurations
  name: ApplyAllConfigurations
  nameWithType: ModelBuilderExtensions.ApplyAllConfigurations
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllConfigurations
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllDataSeeders(ModelBuilder)
  commentId: M:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllDataSeeders(ModelBuilder)
  isExternal: true
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyDataSeedersFromAssembly*
  commentId: Overload:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyDataSeedersFromAssembly
  name: ApplyDataSeedersFromAssembly
  nameWithType: ModelBuilderExtensions.ApplyDataSeedersFromAssembly
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyDataSeedersFromAssembly
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Assembly
  commentId: '!:Assembly'
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: Assembly
- uid: NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder`1
  commentId: T:NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder`1
  name: IEntityDataSeeder<TEntity>
  nameWithType: IEntityDataSeeder<TEntity>
  fullName: NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder<TEntity>
  nameWithType.vb: IEntityDataSeeder(Of TEntity)
  fullName.vb: NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder(Of TEntity)
  name.vb: IEntityDataSeeder(Of TEntity)
  spec.csharp:
  - uid: NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder`1
    name: IEntityDataSeeder
    nameWithType: IEntityDataSeeder
    fullName: NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder`1
    name: IEntityDataSeeder
    nameWithType: IEntityDataSeeder
    fullName: NeerCore.Data.EntityFramework.Abstractions.IEntityDataSeeder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: NeerCore.Data.EntityFramework.Abstractions.IDataSeeder
  commentId: T:NeerCore.Data.EntityFramework.Abstractions.IDataSeeder
  name: IDataSeeder
  nameWithType: IDataSeeder
  fullName: NeerCore.Data.EntityFramework.Abstractions.IDataSeeder
- uid: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllDataSeeders*
  commentId: Overload:NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllDataSeeders
  name: ApplyAllDataSeeders
  nameWithType: ModelBuilderExtensions.ApplyAllDataSeeders
  fullName: NeerCore.Data.EntityFramework.Extensions.ModelBuilderExtensions.ApplyAllDataSeeders
