### YamlMime:ManagedReference
items:
- uid: NeerCore.Mapping.Extensions.ServiceCollectionExtensions
  commentId: T:NeerCore.Mapping.Extensions.ServiceCollectionExtensions
  id: ServiceCollectionExtensions
  parent: NeerCore.Mapping.Extensions
  children:
  - NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddAllMappers(IServiceCollection)
  - NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister(IServiceCollection,Type)
  - NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister(IServiceProvider,Type)
  - NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister``1(IServiceCollection)
  - NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister``1(IServiceProvider)
  - NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMappersFromAssembly(IServiceCollection,Assembly)
  langs:
  - csharp
  - vb
  name: ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
  fullName: NeerCore.Mapping.Extensions.ServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: src/NeerCore.Mapping.Mapster/Extensions/ServiceCollectionExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: ServiceCollectionExtensions
    path: src/NeerCore.Mapping.Mapster/Extensions/ServiceCollectionExtensions.cs
    startLine: 8
  assemblies:
  - NeerCore.Mapping.Mapster
  namespace: NeerCore.Mapping.Extensions
  syntax:
    content: 'public static class ServiceCollectionExtensions : object'
    content.vb: >-
      Public Module ServiceCollectionExtensions

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddAllMappers(IServiceCollection)
  commentId: M:NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddAllMappers(IServiceCollection)
  id: AddAllMappers(IServiceCollection)
  isExtensionMethod: true
  parent: NeerCore.Mapping.Extensions.ServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddAllMappers(IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddAllMappers(IServiceCollection)
  fullName: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddAllMappers(IServiceCollection)
  type: Method
  source:
    remote:
      path: src/NeerCore.Mapping.Mapster/Extensions/ServiceCollectionExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: AddAllMappers
    path: src/NeerCore.Mapping.Mapster/Extensions/ServiceCollectionExtensions.cs
    startLine: 18
  assemblies:
  - NeerCore.Mapping.Mapster
  namespace: NeerCore.Mapping.Extensions
  summary: "\nRegisters all implementations of <see cref=\"!:IRegister\"></see> interface mappings.\n"
  remarks: "\nIf you use one of the injection methods for your mapping registers,\nyou also could be able to use a DI in your <see cref=\"!:IRegister\"></see> implementations.\n"
  example: []
  syntax:
    content: public static IServiceCollection AddAllMappers(this IServiceCollection services)
    parameters:
    - id: services
      type: IServiceCollection
      description: The <see cref="!:IServiceCollection"></see> containing service descriptors.
    return:
      type: IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAllMappers(services As IServiceCollection) As IServiceCollection
  overload: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddAllMappers*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMappersFromAssembly(IServiceCollection,Assembly)
  commentId: M:NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMappersFromAssembly(IServiceCollection,Assembly)
  id: AddMappersFromAssembly(IServiceCollection,Assembly)
  isExtensionMethod: true
  parent: NeerCore.Mapping.Extensions.ServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMappersFromAssembly(IServiceCollection, Assembly)
  nameWithType: ServiceCollectionExtensions.AddMappersFromAssembly(IServiceCollection, Assembly)
  fullName: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMappersFromAssembly(IServiceCollection, Assembly)
  type: Method
  source:
    remote:
      path: src/NeerCore.Mapping.Mapster/Extensions/ServiceCollectionExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: AddMappersFromAssembly
    path: src/NeerCore.Mapping.Mapster/Extensions/ServiceCollectionExtensions.cs
    startLine: 29
  assemblies:
  - NeerCore.Mapping.Mapster
  namespace: NeerCore.Mapping.Extensions
  example: []
  syntax:
    content: public static IServiceCollection AddMappersFromAssembly(this IServiceCollection services, Assembly assembly)
    parameters:
    - id: services
      type: IServiceCollection
    - id: assembly
      type: Assembly
      description: Assembly with <see cref="!:IRegister"></see> implementations to register.
    return:
      type: IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMappersFromAssembly(services As IServiceCollection, assembly As Assembly) As IServiceCollection
  overload: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMappersFromAssembly*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister``1(IServiceCollection)
  commentId: M:NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister``1(IServiceCollection)
  id: AddMapperRegister``1(IServiceCollection)
  isExtensionMethod: true
  parent: NeerCore.Mapping.Extensions.ServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMapperRegister<TRegister>(IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddMapperRegister<TRegister>(IServiceCollection)
  fullName: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister<TRegister>(IServiceCollection)
  type: Method
  source:
    remote:
      path: src/NeerCore.Mapping.Mapster/Extensions/ServiceCollectionExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: AddMapperRegister
    path: src/NeerCore.Mapping.Mapster/Extensions/ServiceCollectionExtensions.cs
    startLine: 43
  assemblies:
  - NeerCore.Mapping.Mapster
  namespace: NeerCore.Mapping.Extensions
  summary: "\nRegister mappings from <see cref=\"!:TRegister\"></see>.\n"
  example: []
  syntax:
    content: >-
      public static IServiceCollection AddMapperRegister<TRegister>(this IServiceCollection services)

          where TRegister : IRegister
    parameters:
    - id: services
      type: IServiceCollection
      description: The <see cref="!:IServiceCollection"></see> containing service descriptors.
    typeParameters:
    - id: TRegister
      description: Mappings register type.
    return:
      type: IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMapperRegister(Of TRegister As IRegister)(services As IServiceCollection) As IServiceCollection
  overload: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister*
  nameWithType.vb: ServiceCollectionExtensions.AddMapperRegister(Of TRegister)(IServiceCollection)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister(Of TRegister)(IServiceCollection)
  name.vb: AddMapperRegister(Of TRegister)(IServiceCollection)
- uid: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister(IServiceCollection,Type)
  commentId: M:NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister(IServiceCollection,Type)
  id: AddMapperRegister(IServiceCollection,Type)
  isExtensionMethod: true
  parent: NeerCore.Mapping.Extensions.ServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMapperRegister(IServiceCollection, Type)
  nameWithType: ServiceCollectionExtensions.AddMapperRegister(IServiceCollection, Type)
  fullName: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister(IServiceCollection, Type)
  type: Method
  source:
    remote:
      path: src/NeerCore.Mapping.Mapster/Extensions/ServiceCollectionExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: AddMapperRegister
    path: src/NeerCore.Mapping.Mapster/Extensions/ServiceCollectionExtensions.cs
    startLine: 56
  assemblies:
  - NeerCore.Mapping.Mapster
  namespace: NeerCore.Mapping.Extensions
  summary: "\nRegister mappings from provided class type.\n"
  example: []
  syntax:
    content: public static IServiceCollection AddMapperRegister(this IServiceCollection services, Type mapperRegisterType)
    parameters:
    - id: services
      type: IServiceCollection
      description: The <see cref="!:IServiceCollection"></see> containing service descriptors.
    - id: mapperRegisterType
      type: Type
      description: Mappings register class.
    return:
      type: IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMapperRegister(services As IServiceCollection, mapperRegisterType As Type) As IServiceCollection
  overload: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister``1(IServiceProvider)
  commentId: M:NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister``1(IServiceProvider)
  id: AddMapperRegister``1(IServiceProvider)
  isExtensionMethod: true
  parent: NeerCore.Mapping.Extensions.ServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMapperRegister<TRegister>(IServiceProvider)
  nameWithType: ServiceCollectionExtensions.AddMapperRegister<TRegister>(IServiceProvider)
  fullName: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister<TRegister>(IServiceProvider)
  type: Method
  source:
    remote:
      path: src/NeerCore.Mapping.Mapster/Extensions/ServiceCollectionExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: AddMapperRegister
    path: src/NeerCore.Mapping.Mapster/Extensions/ServiceCollectionExtensions.cs
    startLine: 68
  assemblies:
  - NeerCore.Mapping.Mapster
  namespace: NeerCore.Mapping.Extensions
  summary: "\nRegister mappings from <see cref=\"!:TRegister\"></see>.\n"
  example: []
  syntax:
    content: >-
      public static IServiceProvider AddMapperRegister<TRegister>(this IServiceProvider serviceProvider)

          where TRegister : IRegister
    parameters:
    - id: serviceProvider
      type: IServiceProvider
      description: Service provider for services presented in <see cref="!:TRegister"></see> DI constructor.
    typeParameters:
    - id: TRegister
      description: Mappings register type.
    return:
      type: IServiceProvider
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMapperRegister(Of TRegister As IRegister)(serviceProvider As IServiceProvider) As IServiceProvider
  overload: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister*
  nameWithType.vb: ServiceCollectionExtensions.AddMapperRegister(Of TRegister)(IServiceProvider)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister(Of TRegister)(IServiceProvider)
  name.vb: AddMapperRegister(Of TRegister)(IServiceProvider)
- uid: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister(IServiceProvider,Type)
  commentId: M:NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister(IServiceProvider,Type)
  id: AddMapperRegister(IServiceProvider,Type)
  isExtensionMethod: true
  parent: NeerCore.Mapping.Extensions.ServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMapperRegister(IServiceProvider, Type)
  nameWithType: ServiceCollectionExtensions.AddMapperRegister(IServiceProvider, Type)
  fullName: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister(IServiceProvider, Type)
  type: Method
  source:
    remote:
      path: src/NeerCore.Mapping.Mapster/Extensions/ServiceCollectionExtensions.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: AddMapperRegister
    path: src/NeerCore.Mapping.Mapster/Extensions/ServiceCollectionExtensions.cs
    startLine: 79
  assemblies:
  - NeerCore.Mapping.Mapster
  namespace: NeerCore.Mapping.Extensions
  summary: "\nRegister mappings from provided class type.\n"
  example: []
  syntax:
    content: public static IServiceProvider AddMapperRegister(this IServiceProvider serviceProvider, Type mapperRegisterType)
    parameters:
    - id: serviceProvider
      type: IServiceProvider
      description: Service provider for services presented in <see cref="!:mapperRegisterType"></see> DI constructor.
    - id: mapperRegisterType
      type: Type
      description: Mappings register class.
    return:
      type: IServiceProvider
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMapperRegister(serviceProvider As IServiceProvider, mapperRegisterType As Type) As IServiceProvider
  overload: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: NeerCore.Mapping.Extensions
  commentId: N:NeerCore.Mapping.Extensions
  name: NeerCore.Mapping.Extensions
  nameWithType: NeerCore.Mapping.Extensions
  fullName: NeerCore.Mapping.Extensions
- uid: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddAllMappers*
  commentId: Overload:NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddAllMappers
  name: AddAllMappers
  nameWithType: ServiceCollectionExtensions.AddAllMappers
  fullName: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddAllMappers
- uid: IServiceCollection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: IServiceCollection
- uid: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddAllMappers(IServiceCollection)
  commentId: M:NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddAllMappers(IServiceCollection)
  isExternal: true
- uid: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMappersFromAssembly*
  commentId: Overload:NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMappersFromAssembly
  name: AddMappersFromAssembly
  nameWithType: ServiceCollectionExtensions.AddMappersFromAssembly
  fullName: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMappersFromAssembly
- uid: Assembly
  commentId: '!:Assembly'
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: Assembly
- uid: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister*
  commentId: Overload:NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister
  name: AddMapperRegister
  nameWithType: ServiceCollectionExtensions.AddMapperRegister
  fullName: NeerCore.Mapping.Extensions.ServiceCollectionExtensions.AddMapperRegister
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: IServiceProvider
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: IServiceProvider
