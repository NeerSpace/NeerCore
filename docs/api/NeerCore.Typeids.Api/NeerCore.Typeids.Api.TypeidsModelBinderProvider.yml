### YamlMime:ManagedReference
items:
- uid: NeerCore.Typeids.Api.TypeidsModelBinderProvider
  commentId: T:NeerCore.Typeids.Api.TypeidsModelBinderProvider
  id: TypeidsModelBinderProvider
  parent: NeerCore.Typeids.Api
  children:
  - NeerCore.Typeids.Api.TypeidsModelBinderProvider.GetBinder(ModelBinderProviderContext)
  langs:
  - csharp
  - vb
  name: TypeidsModelBinderProvider
  nameWithType: TypeidsModelBinderProvider
  fullName: NeerCore.Typeids.Api.TypeidsModelBinderProvider
  type: Class
  source:
    remote:
      path: src/NeerCore.Typeids.Api/TypeidsModelBinderProvider.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: TypeidsModelBinderProvider
    path: ../src/NeerCore.Typeids.Api/TypeidsModelBinderProvider.cs
    startLine: 7
  assemblies:
  - NeerCore.Typeids.Api
  namespace: NeerCore.Typeids.Api
  syntax:
    content: 'public class TypeidsModelBinderProvider : IModelBinderProvider'
    content.vb: >-
      Public Class TypeidsModelBinderProvider

          Inherits IModelBinderProvider
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NeerCore.Typeids.Api.TypeidsModelBinderProvider.GetBinder(ModelBinderProviderContext)
  commentId: M:NeerCore.Typeids.Api.TypeidsModelBinderProvider.GetBinder(ModelBinderProviderContext)
  id: GetBinder(ModelBinderProviderContext)
  parent: NeerCore.Typeids.Api.TypeidsModelBinderProvider
  langs:
  - csharp
  - vb
  name: GetBinder(ModelBinderProviderContext)
  nameWithType: TypeidsModelBinderProvider.GetBinder(ModelBinderProviderContext)
  fullName: NeerCore.Typeids.Api.TypeidsModelBinderProvider.GetBinder(ModelBinderProviderContext)
  type: Method
  source:
    remote:
      path: src/NeerCore.Typeids.Api/TypeidsModelBinderProvider.cs
      branch: v2.0.0
      repo: https://github.com/NeerSpace/NeerCore.git
    id: GetBinder
    path: ../src/NeerCore.Typeids.Api/TypeidsModelBinderProvider.cs
    startLine: 11
  assemblies:
  - NeerCore.Typeids.Api
  namespace: NeerCore.Typeids.Api
  syntax:
    content: public IModelBinder? GetBinder(ModelBinderProviderContext context)
    parameters:
    - id: context
      type: ModelBinderProviderContext
    return:
      type: System.Nullable{IModelBinder}
    content.vb: Public Function GetBinder(context As ModelBinderProviderContext) As IModelBinder?
  overload: NeerCore.Typeids.Api.TypeidsModelBinderProvider.GetBinder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NeerCore.Typeids.Api
  commentId: N:NeerCore.Typeids.Api
  name: NeerCore.Typeids.Api
  nameWithType: NeerCore.Typeids.Api
  fullName: NeerCore.Typeids.Api
- uid: NeerCore.Typeids.Api.TypeidsModelBinderProvider.GetBinder*
  commentId: Overload:NeerCore.Typeids.Api.TypeidsModelBinderProvider.GetBinder
  name: GetBinder
  nameWithType: TypeidsModelBinderProvider.GetBinder
  fullName: NeerCore.Typeids.Api.TypeidsModelBinderProvider.GetBinder
- uid: ModelBinderProviderContext
  commentId: '!:ModelBinderProviderContext'
  isExternal: true
  name: ModelBinderProviderContext
  nameWithType: ModelBinderProviderContext
  fullName: ModelBinderProviderContext
- uid: System.Nullable{IModelBinder}
  commentId: '!:System.Nullable{IModelBinder}'
  definition: System.Nullable`1
  name: Nullable<IModelBinder>
  nameWithType: Nullable<IModelBinder>
  fullName: System.Nullable<IModelBinder>
  nameWithType.vb: Nullable(Of IModelBinder)
  fullName.vb: System.Nullable(Of IModelBinder)
  name.vb: Nullable(Of IModelBinder)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IModelBinder
    name: IModelBinder
    nameWithType: IModelBinder
    fullName: IModelBinder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IModelBinder
    name: IModelBinder
    nameWithType: IModelBinder
    fullName: IModelBinder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
